<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="uninit_pointer_016">
   <statistics avg-context-complexity="5.48" avg-predicate-complexity="1.45" context-complexity="471" predicate-complexity="125" size="86"/>
   <unconstrained-external-functions/>
   <primary-proof-obligations>
    <proof-obligation c-complexity="0" id="1" origin="prim-op" p-complexity="1">
     <location byte="139856" file="uninit_pointer.c" line="392"/>
     <predicate op="mult" size="iulong" tag="int-underflow">
      <exp1 etag="const" xstr="10">
       <constant ctag="cint64" ikind="iulong" intValue="10"/>
      </exp1>
      <exp2 etag="sizeof" xstr="sizeof (char)">
       <typ ikind="ichar" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="139"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="2" origin="prim-op" p-complexity="1">
     <location byte="139856" file="uninit_pointer.c" line="392"/>
     <predicate op="mult" size="iulong" tag="int-overflow">
      <exp1 etag="const" xstr="10">
       <constant ctag="cint64" ikind="iulong" intValue="10"/>
      </exp1>
      <exp2 etag="sizeof" xstr="sizeof (char)">
       <typ ikind="ichar" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="139"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="3" origin="prim-exp" p-complexity="1">
     <location byte="139856" file="uninit_pointer.c" line="392"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="4706" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="139"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="4" origin="prim-exp" p-complexity="0">
     <location byte="139856" file="uninit_pointer.c" line="392"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4706" vname="tmp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="139"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="5" origin="prim-exp" p-complexity="0">
     <location byte="139898" file="uninit_pointer.c" line="393"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4702" vname="flag"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="139"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="6" origin="prim-exp" p-complexity="0">
     <location byte="139898" file="uninit_pointer.c" line="393"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4708" vname="tmp___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="140"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="7" origin="prim-exp" p-complexity="1">
     <location byte="139980" file="uninit_pointer.c" line="398"/>
     <predicate tag="cast">
      <tfrom ttag="tptr">
       <typ ttag="tptr">
        <typ ikind="ichar" ttag="tint"/>
       </typ>
      </tfrom>
      <tto ikind="iulong" ttag="tint"/>
      <exp etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
       <lval>
        <lhost>
         <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="8" origin="prim-exp" p-complexity="0">
     <location byte="139980" file="uninit_pointer.c" line="398"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="9" origin="prim-exp" p-complexity="0">
     <location byte="139980" file="uninit_pointer.c" line="398"/>
     <predicate tag="cast">
      <tfrom ttag="tptr">
       <typ ttag="tvoid"/>
      </tfrom>
      <tto ikind="iulong" ttag="tint"/>
      <exp etag="caste" xstr="caste (0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="const" xstr="0">
        <constant ctag="cint64" ikind="iint" intValue="0"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="10" origin="prim-exp" p-complexity="0">
     <location byte="139980" file="uninit_pointer.c" line="398"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ttag="tptr">
       <typ ttag="tvoid"/>
      </tto>
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="11" origin="prim-exp" p-complexity="0">
     <location byte="140035" file="uninit_pointer.c" line="400"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4703" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="145"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="12" origin="prim-exp" p-complexity="1">
     <location byte="140060" file="uninit_pointer.c" line="402"/>
     <predicate tag="cast">
      <tfrom ttag="tptr">
       <typ ikind="ichar" ttag="tint"/>
      </tfrom>
      <tto ikind="iulong" ttag="tint"/>
      <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
       <lval>
        <lhost>
         <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
          <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
           <lval>
            <lhost>
             <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
            </lhost>
           </lval>
          </exp1>
          <exp2 etag="lval" xstr="i">
           <lval>
            <lhost>
             <var vid="4703" vname="i"/>
            </lhost>
           </lval>
          </exp2>
          <typ ttag="tptr">
           <typ ttag="tptr">
            <typ ikind="ichar" ttag="tint"/>
           </typ>
          </typ>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="13" origin="prim-exp" p-complexity="8">
     <location byte="140060" file="uninit_pointer.c" line="402"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
         <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
          <lval>
           <lhost>
            <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="lval" xstr="i">
          <lval>
           <lhost>
            <var vid="4703" vname="i"/>
           </lhost>
          </lval>
         </exp2>
         <typ ttag="tptr">
          <typ ttag="tptr">
           <typ ikind="ichar" ttag="tint"/>
          </typ>
         </typ>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="14" origin="prim-exp" p-complexity="0">
     <location byte="140060" file="uninit_pointer.c" line="402"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="15" origin="prim-exp" p-complexity="0">
     <location byte="140060" file="uninit_pointer.c" line="402"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4703" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="16" origin="prim-op" p-complexity="1">
     <location byte="140060" file="uninit_pointer.c" line="402"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
       <lval>
        <lhost>
         <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="17" origin="prim-op" p-complexity="1">
     <location byte="140060" file="uninit_pointer.c" line="402"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
       <lval>
        <lhost>
         <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="18" origin="prim-op" p-complexity="3">
     <location byte="140060" file="uninit_pointer.c" line="402"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ttag="tptr">
       <typ ikind="ichar" ttag="tint"/>
      </typ>
      <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
       <lval>
        <lhost>
         <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="4703" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="19" origin="prim-op" p-complexity="2">
     <location byte="140060" file="uninit_pointer.c" line="402"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ttag="tptr">
       <typ ikind="ichar" ttag="tint"/>
      </typ>
      <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
       <lval>
        <lhost>
         <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="4703" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="20" origin="prim-lval" p-complexity="3">
     <location byte="140060" file="uninit_pointer.c" line="402"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
       <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
        <lval>
         <lhost>
          <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="4703" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="21" origin="prim-lval" p-complexity="3">
     <location byte="140060" file="uninit_pointer.c" line="402"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
       <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
        <lval>
         <lhost>
          <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="4703" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="22" origin="prim-lval" p-complexity="3">
     <location byte="140060" file="uninit_pointer.c" line="402"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
       <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
        <lval>
         <lhost>
          <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="4703" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
       </typ>
      </exp>
      <typ ttag="tptr">
       <typ ikind="ichar" ttag="tint"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="23" origin="prim-lval" p-complexity="3">
     <location byte="140060" file="uninit_pointer.c" line="402"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
       <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
        <lval>
         <lhost>
          <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="4703" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
       </typ>
      </exp>
      <typ ttag="tptr">
       <typ ikind="ichar" ttag="tint"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="24" origin="prim-exp" p-complexity="0">
     <location byte="140060" file="uninit_pointer.c" line="402"/>
     <predicate tag="cast">
      <tfrom ttag="tptr">
       <typ ttag="tvoid"/>
      </tfrom>
      <tto ikind="iulong" ttag="tint"/>
      <exp etag="caste" xstr="caste (0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="const" xstr="0">
        <constant ctag="cint64" ikind="iint" intValue="0"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="25" origin="prim-exp" p-complexity="0">
     <location byte="140060" file="uninit_pointer.c" line="402"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ttag="tptr">
       <typ ttag="tvoid"/>
      </tto>
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="26" origin="prim-exp" p-complexity="0">
     <location byte="140123" file="uninit_pointer.c" line="404"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4703" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" fname="strcpy" id="27" name="deref-read-nt" origin="f-pre" p-complexity="1">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>src</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="8" fname="strcpy" id="28" name="deref-read-nt" origin="f-pre" p-complexity="1">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="null-terminated">
      <exp etag="caste" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>src</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="8" fname="strcpy" id="29" name="deref-read-nt" origin="f-pre" p-complexity="1">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>src</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="8" fname="strcpy" id="30" name="deref-read-nt" origin="f-pre" p-complexity="2">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
      <exp1 etag="caste" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))]">
       <arg etag="caste" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))">
        <typ ttag="tptr">
         <attributes>
          <attr attrname="restrict"/>
         </attributes>
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
         <lval>
          <lhost>
           <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
            <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
             <lval>
              <lhost>
               <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
              </lhost>
             </lval>
            </exp1>
            <exp2 etag="lval" xstr="i">
             <lval>
              <lhost>
               <var vid="4703" vname="i"/>
              </lhost>
             </lval>
            </exp2>
            <typ ttag="tptr">
             <typ ttag="tptr">
              <typ ikind="ichar" ttag="tint"/>
             </typ>
            </typ>
           </mem>
          </lhost>
         </lval>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>src</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="8" fname="strcpy" id="31" name="deref-read-nt" origin="f-pre" p-complexity="1">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="initialized-range">
      <base-exp etag="caste" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </base-exp>
      <len-exp cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))]">
       <arg etag="caste" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))">
        <typ ttag="tptr">
         <attributes>
          <attr attrname="restrict"/>
         </attributes>
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
         <lval>
          <lhost>
           <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
            <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
             <lval>
              <lhost>
               <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
              </lhost>
             </lval>
            </exp1>
            <exp2 etag="lval" xstr="i">
             <lval>
              <lhost>
               <var vid="4703" vname="i"/>
              </lhost>
             </lval>
            </exp2>
            <typ ttag="tptr">
             <typ ttag="tptr">
              <typ ikind="ichar" ttag="tint"/>
             </typ>
            </typ>
           </mem>
          </lhost>
         </lval>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </len-exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="deref-read-nt">
      <math>
       <apply>
        <deref-read/>
        <ci>src</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>src</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="8" fname="strcpy" id="32" name="no-overlap" origin="f-pre" p-complexity="2">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="no-overlap">
      <exp1 etag="caste" xstr="caste (s___0:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="s___0">
        <lval>
         <lhost>
          <var vid="4705" vname="s___0"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 etag="caste" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp>
      <exp etag="caste" name="dest" nr="1" xstr="caste (s___0:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="s___0">
        <lval>
         <lhost>
          <var vid="4705" vname="s___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="no-overlap">
      <math>
       <apply>
        <no-overlap/>
        <ci>dest</ci>
        <ci>src</ci>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="8" fname="strcpy" id="33" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="not-null">
      <exp etag="caste" xstr="caste (s___0:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="s___0">
        <lval>
         <lhost>
          <var vid="4705" vname="s___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp>
      <exp etag="caste" name="dest" nr="1" xstr="caste (s___0:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="s___0">
        <lval>
         <lhost>
          <var vid="4705" vname="s___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>dest</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>src</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="8" fname="strcpy" id="34" name="buffersize" origin="f-pre" p-complexity="1">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (s___0:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="s___0">
        <lval>
         <lhost>
          <var vid="4705" vname="s___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp>
      <exp etag="caste" name="dest" nr="1" xstr="caste (s___0:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="s___0">
        <lval>
         <lhost>
          <var vid="4705" vname="s___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>dest</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>src</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="8" fname="strcpy" id="35" name="buffersize" origin="f-pre" p-complexity="2">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate op="pluspi" tag="ptr-upper-bound">
      <typ ikind="ichar" ttag="tint"/>
      <exp1 etag="caste" xstr="caste (s___0:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="s___0">
        <lval>
         <lhost>
          <var vid="4705" vname="s___0"/>
         </lhost>
        </lval>
       </exp>
      </exp1>
      <exp2 cn="null-terminator-pos" etag="cnapp" xstr="null-terminator-pos[caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))]">
       <arg etag="caste" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))">
        <typ ttag="tptr">
         <attributes>
          <attr attrname="restrict"/>
         </attributes>
         <typ ikind="ichar" ttag="tint">
          <attributes>
           <attr attrname="const"/>
          </attributes>
         </typ>
        </typ>
        <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
         <lval>
          <lhost>
           <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
            <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
             <lval>
              <lhost>
               <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
              </lhost>
             </lval>
            </exp1>
            <exp2 etag="lval" xstr="i">
             <lval>
              <lhost>
               <var vid="4703" vname="i"/>
              </lhost>
             </lval>
            </exp2>
            <typ ttag="tptr">
             <typ ttag="tptr">
              <typ ikind="ichar" ttag="tint"/>
             </typ>
            </typ>
           </mem>
          </lhost>
         </lval>
        </exp>
       </arg>
       <typ ikind="iint" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="src" nr="2" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp>
      <exp etag="caste" name="dest" nr="1" xstr="caste (s___0:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="s___0">
        <lval>
         <lhost>
          <var vid="4705" vname="s___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="buffersize">
      <math>
       <apply>
        <deref-write/>
        <ci>dest</ci>
        <apply>
         <index-size/>
         <apply>
          <nullterminator-pos/>
          <ci>src</ci>
         </apply>
        </apply>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="36" origin="prim-exp" p-complexity="1">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint"/>
      <exp etag="lval" xstr="s___0">
       <lval>
        <lhost>
         <var vid="4705" vname="s___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="37" origin="prim-exp" p-complexity="0">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4705" vname="s___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="38" origin="prim-exp" p-complexity="1">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (s___0:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="s___0">
        <lval>
         <lhost>
          <var vid="4705" vname="s___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="39" origin="prim-exp" p-complexity="1">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (s___0:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="s___0">
        <lval>
         <lhost>
          <var vid="4705" vname="s___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="40" origin="prim-exp" p-complexity="1">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (s___0:(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint"/>
       </typ>
       <exp etag="lval" xstr="s___0">
        <lval>
         <lhost>
          <var vid="4705" vname="s___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="41" origin="prim-exp" p-complexity="1">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </tto>
      <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
       <lval>
        <lhost>
         <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
          <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
           <lval>
            <lhost>
             <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
            </lhost>
           </lval>
          </exp1>
          <exp2 etag="lval" xstr="i">
           <lval>
            <lhost>
             <var vid="4703" vname="i"/>
            </lhost>
           </lval>
          </exp2>
          <typ ttag="tptr">
           <typ ttag="tptr">
            <typ ikind="ichar" ttag="tint"/>
           </typ>
          </typ>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="42" origin="prim-exp" p-complexity="8">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
         <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
          <lval>
           <lhost>
            <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="lval" xstr="i">
          <lval>
           <lhost>
            <var vid="4703" vname="i"/>
           </lhost>
          </lval>
         </exp2>
         <typ ttag="tptr">
          <typ ttag="tptr">
           <typ ikind="ichar" ttag="tint"/>
          </typ>
         </typ>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="43" origin="prim-exp" p-complexity="0">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="44" origin="prim-exp" p-complexity="0">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4703" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="45" origin="prim-op" p-complexity="1">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
       <lval>
        <lhost>
         <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="46" origin="prim-op" p-complexity="1">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
       <lval>
        <lhost>
         <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="47" origin="prim-op" p-complexity="3">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ttag="tptr">
       <typ ikind="ichar" ttag="tint"/>
      </typ>
      <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
       <lval>
        <lhost>
         <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="4703" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="48" origin="prim-op" p-complexity="2">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ttag="tptr">
       <typ ikind="ichar" ttag="tint"/>
      </typ>
      <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
       <lval>
        <lhost>
         <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="4703" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="49" origin="prim-lval" p-complexity="3">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
       <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
        <lval>
         <lhost>
          <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="4703" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="50" origin="prim-lval" p-complexity="3">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
       <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
        <lval>
         <lhost>
          <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="4703" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="51" origin="prim-lval" p-complexity="3">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
       <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
        <lval>
         <lhost>
          <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="4703" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
       </typ>
      </exp>
      <typ ttag="tptr">
       <typ ikind="ichar" ttag="tint"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="52" origin="prim-lval" p-complexity="3">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
       <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
        <lval>
         <lhost>
          <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="4703" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
       </typ>
      </exp>
      <typ ttag="tptr">
       <typ ikind="ichar" ttag="tint"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="53" origin="prim-exp" p-complexity="1">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="54" origin="prim-exp" p-complexity="1">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="8" id="55" origin="prim-exp" p-complexity="1">
     <location byte="140140" file="uninit_pointer.c" line="405"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(char*))">
       <typ ttag="tptr">
        <attributes>
         <attr attrname="restrict"/>
        </attributes>
        <typ ikind="ichar" ttag="tint">
         <attributes>
          <attr attrname="const"/>
         </attributes>
        </typ>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ikind="ichar" ttag="tint">
       <attributes>
        <attr attrname="const"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="149"/>
       <node name="if-then"/>
       <node name="stmt" num="148"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" fname="free" id="56" name="allocation-base" origin="f-pre" p-complexity="1">
     <location byte="140190" file="uninit_pointer.c" line="406"/>
     <predicate tag="allocation-base">
      <exp etag="caste" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="150"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="ptr" nr="1" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="allocation-base">
      <math>
       <apply>
        <allocation-base/>
        <ci>ptr</ci>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="57" origin="prim-exp" p-complexity="1">
     <location byte="140190" file="uninit_pointer.c" line="406"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ttag="tvoid"/>
      <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
       <lval>
        <lhost>
         <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
          <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
           <lval>
            <lhost>
             <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
            </lhost>
           </lval>
          </exp1>
          <exp2 etag="lval" xstr="i">
           <lval>
            <lhost>
             <var vid="4703" vname="i"/>
            </lhost>
           </lval>
          </exp2>
          <typ ttag="tptr">
           <typ ttag="tptr">
            <typ ikind="ichar" ttag="tint"/>
           </typ>
          </typ>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="150"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="58" origin="prim-exp" p-complexity="8">
     <location byte="140190" file="uninit_pointer.c" line="406"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
         <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
          <lval>
           <lhost>
            <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="lval" xstr="i">
          <lval>
           <lhost>
            <var vid="4703" vname="i"/>
           </lhost>
          </lval>
         </exp2>
         <typ ttag="tptr">
          <typ ttag="tptr">
           <typ ikind="ichar" ttag="tint"/>
          </typ>
         </typ>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="150"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="59" origin="prim-exp" p-complexity="0">
     <location byte="140190" file="uninit_pointer.c" line="406"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="150"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="60" origin="prim-exp" p-complexity="0">
     <location byte="140190" file="uninit_pointer.c" line="406"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4703" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="150"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="61" origin="prim-op" p-complexity="1">
     <location byte="140190" file="uninit_pointer.c" line="406"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
       <lval>
        <lhost>
         <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="150"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="62" origin="prim-op" p-complexity="1">
     <location byte="140190" file="uninit_pointer.c" line="406"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
       <lval>
        <lhost>
         <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="150"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="63" origin="prim-op" p-complexity="3">
     <location byte="140190" file="uninit_pointer.c" line="406"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ttag="tptr">
       <typ ikind="ichar" ttag="tint"/>
      </typ>
      <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
       <lval>
        <lhost>
         <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="4703" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="150"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="64" origin="prim-op" p-complexity="2">
     <location byte="140190" file="uninit_pointer.c" line="406"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ttag="tptr">
       <typ ikind="ichar" ttag="tint"/>
      </typ>
      <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
       <lval>
        <lhost>
         <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="4703" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="150"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="65" origin="prim-lval" p-complexity="3">
     <location byte="140190" file="uninit_pointer.c" line="406"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
       <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
        <lval>
         <lhost>
          <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="4703" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="150"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="66" origin="prim-lval" p-complexity="3">
     <location byte="140190" file="uninit_pointer.c" line="406"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
       <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
        <lval>
         <lhost>
          <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="4703" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="150"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="67" origin="prim-lval" p-complexity="3">
     <location byte="140190" file="uninit_pointer.c" line="406"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
       <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
        <lval>
         <lhost>
          <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="4703" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
       </typ>
      </exp>
      <typ ttag="tptr">
       <typ ikind="ichar" ttag="tint"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="150"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="68" origin="prim-lval" p-complexity="3">
     <location byte="140190" file="uninit_pointer.c" line="406"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
       <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
        <lval>
         <lhost>
          <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="4703" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ttag="tptr">
         <typ ikind="ichar" ttag="tint"/>
        </typ>
       </typ>
      </exp>
      <typ ttag="tptr">
       <typ ikind="ichar" ttag="tint"/>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="150"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="69" origin="prim-exp" p-complexity="1">
     <location byte="140190" file="uninit_pointer.c" line="406"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="150"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="70" origin="prim-exp" p-complexity="1">
     <location byte="140190" file="uninit_pointer.c" line="406"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="150"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="7" id="71" origin="prim-exp" p-complexity="1">
     <location byte="140190" file="uninit_pointer.c" line="406"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*)):(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="*(((lval (uninit_pointer_016_gbl_doubleptr) +i lval (i)):((char*)*))">
        <lval>
         <lhost>
          <mem binop="indexpi" etag="binop" xstr="((uninit_pointer_016_gbl_doubleptr +i i):((char*)*)">
           <exp1 etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
            <lval>
             <lhost>
              <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="lval" xstr="i">
            <lval>
             <lhost>
              <var vid="4703" vname="i"/>
             </lhost>
            </lval>
           </exp2>
           <typ ttag="tptr">
            <typ ttag="tptr">
             <typ ikind="ichar" ttag="tint"/>
            </typ>
           </typ>
          </mem>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="150"/>
       <node name="if-then"/>
       <node name="stmt" num="147"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="72" origin="prim-exp" p-complexity="0">
     <location byte="140035" file="uninit_pointer.c" line="400"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4703" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="151"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="73" origin="prim-op" p-complexity="2">
     <location byte="140035" file="uninit_pointer.c" line="400"/>
     <predicate op="plusa" size="iint" tag="int-underflow">
      <exp1 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="4703" vname="i"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="151"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="6" id="74" origin="prim-op" p-complexity="2">
     <location byte="140035" file="uninit_pointer.c" line="400"/>
     <predicate op="plusa" size="iint" tag="int-overflow">
      <exp1 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="4703" vname="i"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="151"/>
       <node name="loop"/>
       <node name="stmt" num="144"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="free" id="75" name="allocation-base" origin="f-pre" p-complexity="1">
     <location byte="140251" file="uninit_pointer.c" line="409"/>
     <predicate tag="allocation-base">
      <exp etag="caste" xstr="caste (uninit_pointer_016_gbl_doubleptr:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
        <lval>
         <lhost>
          <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="ptr" nr="1" xstr="caste (uninit_pointer_016_gbl_doubleptr:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
        <lval>
         <lhost>
          <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="allocation-base">
      <math>
       <apply>
        <allocation-base/>
        <ci>ptr</ci>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="76" origin="prim-exp" p-complexity="1">
     <location byte="140251" file="uninit_pointer.c" line="409"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tptr">
       <typ ikind="ichar" ttag="tint"/>
      </tfrom>
      <tto ttag="tvoid"/>
      <exp etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
       <lval>
        <lhost>
         <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="77" origin="prim-exp" p-complexity="0">
     <location byte="140251" file="uninit_pointer.c" line="409"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="78" origin="prim-exp" p-complexity="1">
     <location byte="140251" file="uninit_pointer.c" line="409"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (uninit_pointer_016_gbl_doubleptr:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
        <lval>
         <lhost>
          <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="79" origin="prim-exp" p-complexity="1">
     <location byte="140251" file="uninit_pointer.c" line="409"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (uninit_pointer_016_gbl_doubleptr:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
        <lval>
         <lhost>
          <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="80" origin="prim-exp" p-complexity="1">
     <location byte="140251" file="uninit_pointer.c" line="409"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (uninit_pointer_016_gbl_doubleptr:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="uninit_pointer_016_gbl_doubleptr">
        <lval>
         <lhost>
          <var vid="4579" vname="uninit_pointer_016_gbl_doubleptr"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" fname="free" id="81" name="allocation-base" origin="f-pre" p-complexity="1">
     <location byte="140296" file="uninit_pointer.c" line="410"/>
     <predicate tag="allocation-base">
      <exp etag="caste" xstr="caste (s___0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="s___0">
        <lval>
         <lhost>
          <var vid="4705" vname="s___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context/>
     </context>
     <args>
      <exp etag="caste" name="ptr" nr="1" xstr="caste (s___0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="s___0">
        <lval>
         <lhost>
          <var vid="4705" vname="s___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </args>
     <precondition name="allocation-base">
      <math>
       <apply>
        <allocation-base/>
        <ci>ptr</ci>
       </apply>
      </math>
     </precondition>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="82" origin="prim-exp" p-complexity="1">
     <location byte="140296" file="uninit_pointer.c" line="410"/>
     <predicate tag="pointer-cast">
      <tfrom ikind="ichar" ttag="tint"/>
      <tto ttag="tvoid"/>
      <exp etag="lval" xstr="s___0">
       <lval>
        <lhost>
         <var vid="4705" vname="s___0"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="83" origin="prim-exp" p-complexity="0">
     <location byte="140296" file="uninit_pointer.c" line="410"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4705" vname="s___0"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="84" origin="prim-exp" p-complexity="1">
     <location byte="140296" file="uninit_pointer.c" line="410"/>
     <predicate tag="valid-mem">
      <exp etag="caste" xstr="caste (s___0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="s___0">
        <lval>
         <lhost>
          <var vid="4705" vname="s___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="85" origin="prim-exp" p-complexity="1">
     <location byte="140296" file="uninit_pointer.c" line="410"/>
     <predicate tag="lower-bound">
      <exp etag="caste" xstr="caste (s___0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="s___0">
        <lval>
         <lhost>
          <var vid="4705" vname="s___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="1" id="86" origin="prim-exp" p-complexity="1">
     <location byte="140296" file="uninit_pointer.c" line="410"/>
     <predicate tag="upper-bound">
      <exp etag="caste" xstr="caste (s___0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="lval" xstr="s___0">
        <lval>
         <lhost>
          <var vid="4705" vname="s___0"/>
         </lhost>
        </lval>
       </exp>
      </exp>
      <typ ttag="tvoid"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="152"/>
       <node name="if-then"/>
       <node name="stmt" num="142"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
   </primary-proof-obligations>
  </function>
  <header time="05/31/2016 16:55:52">
   <application file="uninit_pointer.xml" name="application"/>
  </header>
 </c-analysis>

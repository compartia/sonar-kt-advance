<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="uninit_pointer_011">
   <statistics avg-context-complexity="8.90" avg-predicate-complexity="1.55" context-complexity="374" predicate-complexity="65" size="42"/>
   <unconstrained-external-functions/>
   <primary-proof-obligations>
    <proof-obligation c-complexity="0" id="1" origin="prim-op" p-complexity="1">
     <location byte="137431" file="uninit_pointer.c" line="214"/>
     <predicate op="mult" size="iulong" tag="int-underflow">
      <exp1 etag="const" xstr="10">
       <constant ctag="cint64" ikind="iulong" intValue="10"/>
      </exp1>
      <exp2 etag="sizeof" xstr="sizeof ((unsigned int*))">
       <typ ttag="tptr">
        <typ ikind="iuint" ttag="tint"/>
       </typ>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="59"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="2" origin="prim-op" p-complexity="1">
     <location byte="137431" file="uninit_pointer.c" line="214"/>
     <predicate op="mult" size="iulong" tag="int-overflow">
      <exp1 etag="const" xstr="10">
       <constant ctag="cint64" ikind="iulong" intValue="10"/>
      </exp1>
      <exp2 etag="sizeof" xstr="sizeof ((unsigned int*))">
       <typ ttag="tptr">
        <typ ikind="iuint" ttag="tint"/>
       </typ>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="59"/>
      </cfg-context>
      <exp-context>
       <node name="arg" num="0"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="3" origin="prim-exp" p-complexity="1">
     <location byte="137431" file="uninit_pointer.c" line="214"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ikind="iuint" ttag="tint"/>
      <exp etag="lval" xstr="tmp">
       <lval>
        <lhost>
         <var vid="4661" vname="tmp"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="59"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="4" origin="prim-exp" p-complexity="0">
     <location byte="137431" file="uninit_pointer.c" line="214"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4661" vname="tmp"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="59"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="5" origin="prim-exp" p-complexity="1">
     <location byte="137500" file="uninit_pointer.c" line="216"/>
     <predicate tag="cast">
      <tfrom ttag="tptr">
       <typ ikind="iuint" ttag="tint"/>
      </tfrom>
      <tto ikind="iulong" ttag="tint"/>
      <exp etag="lval" xstr="ptr">
       <lval>
        <lhost>
         <var vid="4659" vname="ptr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="6" origin="prim-exp" p-complexity="0">
     <location byte="137500" file="uninit_pointer.c" line="216"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4659" vname="ptr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="7" origin="prim-exp" p-complexity="0">
     <location byte="137500" file="uninit_pointer.c" line="216"/>
     <predicate tag="cast">
      <tfrom ttag="tptr">
       <typ ttag="tvoid"/>
      </tfrom>
      <tto ikind="iulong" ttag="tint"/>
      <exp etag="caste" xstr="caste (0:(void*))">
       <typ ttag="tptr">
        <typ ttag="tvoid"/>
       </typ>
       <exp etag="const" xstr="0">
        <constant ctag="cint64" ikind="iint" intValue="0"/>
       </exp>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="8" origin="prim-exp" p-complexity="0">
     <location byte="137500" file="uninit_pointer.c" line="216"/>
     <predicate tag="cast">
      <tfrom ikind="iint" ttag="tint"/>
      <tto ttag="tptr">
       <typ ttag="tvoid"/>
      </tto>
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="9" origin="prim-exp" p-complexity="0">
     <location byte="137556" file="uninit_pointer.c" line="220"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4662" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="64"/>
       <node name="loop"/>
       <node name="stmt" num="63"/>
       <node name="loop"/>
       <node name="stmt" num="61"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="10" origin="prim-exp" p-complexity="0">
     <location byte="137604" file="uninit_pointer.c" line="222"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4659" vname="ptr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="66"/>
       <node name="loop"/>
       <node name="stmt" num="63"/>
       <node name="loop"/>
       <node name="stmt" num="61"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="11" origin="prim-exp" p-complexity="0">
     <location byte="137604" file="uninit_pointer.c" line="222"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4662" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="66"/>
       <node name="loop"/>
       <node name="stmt" num="63"/>
       <node name="loop"/>
       <node name="stmt" num="61"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="12" origin="prim-op" p-complexity="1">
     <location byte="137604" file="uninit_pointer.c" line="222"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="ptr">
       <lval>
        <lhost>
         <var vid="4659" vname="ptr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="66"/>
       <node name="loop"/>
       <node name="stmt" num="63"/>
       <node name="loop"/>
       <node name="stmt" num="61"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="13" origin="prim-op" p-complexity="1">
     <location byte="137604" file="uninit_pointer.c" line="222"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="ptr">
       <lval>
        <lhost>
         <var vid="4659" vname="ptr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="66"/>
       <node name="loop"/>
       <node name="stmt" num="63"/>
       <node name="loop"/>
       <node name="stmt" num="61"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="14" origin="prim-op" p-complexity="3">
     <location byte="137604" file="uninit_pointer.c" line="222"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ikind="iuint" ttag="tint"/>
      <exp1 etag="lval" xstr="ptr">
       <lval>
        <lhost>
         <var vid="4659" vname="ptr"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="4662" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="66"/>
       <node name="loop"/>
       <node name="stmt" num="63"/>
       <node name="loop"/>
       <node name="stmt" num="61"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="15" origin="prim-op" p-complexity="2">
     <location byte="137604" file="uninit_pointer.c" line="222"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ikind="iuint" ttag="tint"/>
      <exp1 etag="lval" xstr="ptr">
       <lval>
        <lhost>
         <var vid="4659" vname="ptr"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="4662" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="66"/>
       <node name="loop"/>
       <node name="stmt" num="63"/>
       <node name="loop"/>
       <node name="stmt" num="61"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="16" origin="prim-lval" p-complexity="3">
     <location byte="137604" file="uninit_pointer.c" line="222"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="((ptr +i i):(unsigned int*)">
       <exp1 etag="lval" xstr="ptr">
        <lval>
         <lhost>
          <var vid="4659" vname="ptr"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="4662" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iuint" ttag="tint"/>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="66"/>
       <node name="loop"/>
       <node name="stmt" num="63"/>
       <node name="loop"/>
       <node name="stmt" num="61"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="17" origin="prim-lval" p-complexity="3">
     <location byte="137604" file="uninit_pointer.c" line="222"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="((ptr +i i):(unsigned int*)">
       <exp1 etag="lval" xstr="ptr">
        <lval>
         <lhost>
          <var vid="4659" vname="ptr"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="4662" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iuint" ttag="tint"/>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="66"/>
       <node name="loop"/>
       <node name="stmt" num="63"/>
       <node name="loop"/>
       <node name="stmt" num="61"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="18" origin="prim-lval" p-complexity="3">
     <location byte="137604" file="uninit_pointer.c" line="222"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="((ptr +i i):(unsigned int*)">
       <exp1 etag="lval" xstr="ptr">
        <lval>
         <lhost>
          <var vid="4659" vname="ptr"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="4662" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iuint" ttag="tint"/>
       </typ>
      </exp>
      <typ ikind="iuint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="66"/>
       <node name="loop"/>
       <node name="stmt" num="63"/>
       <node name="loop"/>
       <node name="stmt" num="61"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="19" origin="prim-lval" p-complexity="3">
     <location byte="137604" file="uninit_pointer.c" line="222"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="((ptr +i i):(unsigned int*)">
       <exp1 etag="lval" xstr="ptr">
        <lval>
         <lhost>
          <var vid="4659" vname="ptr"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="4662" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iuint" ttag="tint"/>
       </typ>
      </exp>
      <typ ikind="iuint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="66"/>
       <node name="loop"/>
       <node name="stmt" num="63"/>
       <node name="loop"/>
       <node name="stmt" num="61"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="20" origin="prim-exp" p-complexity="1">
     <location byte="137604" file="uninit_pointer.c" line="222"/>
     <predicate from="iint" tag="signed-to-unsigned-cast" to="iuint">
      <exp etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="4662" vname="i"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="66"/>
       <node name="loop"/>
       <node name="stmt" num="63"/>
       <node name="loop"/>
       <node name="stmt" num="61"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="21" origin="prim-exp" p-complexity="0">
     <location byte="137604" file="uninit_pointer.c" line="222"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4662" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="66"/>
       <node name="loop"/>
       <node name="stmt" num="63"/>
       <node name="loop"/>
       <node name="stmt" num="61"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="22" origin="prim-exp" p-complexity="0">
     <location byte="137556" file="uninit_pointer.c" line="220"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4662" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="66"/>
       <node name="loop"/>
       <node name="stmt" num="63"/>
       <node name="loop"/>
       <node name="stmt" num="61"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="23" origin="prim-op" p-complexity="2">
     <location byte="137556" file="uninit_pointer.c" line="220"/>
     <predicate op="plusa" size="iint" tag="int-underflow">
      <exp1 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="4662" vname="i"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="66"/>
       <node name="loop"/>
       <node name="stmt" num="63"/>
       <node name="loop"/>
       <node name="stmt" num="61"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="24" origin="prim-op" p-complexity="2">
     <location byte="137556" file="uninit_pointer.c" line="220"/>
     <predicate op="plusa" size="iint" tag="int-overflow">
      <exp1 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="4662" vname="i"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="66"/>
       <node name="loop"/>
       <node name="stmt" num="63"/>
       <node name="loop"/>
       <node name="stmt" num="61"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="25" origin="prim-exp" p-complexity="0">
     <location byte="137691" file="uninit_pointer.c" line="228"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4662" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="71"/>
       <node name="loop"/>
       <node name="stmt" num="70"/>
       <node name="loop"/>
       <node name="stmt" num="68"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="26" origin="prim-exp" p-complexity="0">
     <location byte="137734" file="uninit_pointer.c" line="230"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4660" vname="a"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="73"/>
       <node name="loop"/>
       <node name="stmt" num="70"/>
       <node name="loop"/>
       <node name="stmt" num="68"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="27" origin="prim-exp" p-complexity="8">
     <location byte="137734" file="uninit_pointer.c" line="230"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem binop="indexpi" etag="binop" xstr="((ptr +i i):(unsigned int*)">
         <exp1 etag="lval" xstr="ptr">
          <lval>
           <lhost>
            <var vid="4659" vname="ptr"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="lval" xstr="i">
          <lval>
           <lhost>
            <var vid="4662" vname="i"/>
           </lhost>
          </lval>
         </exp2>
         <typ ttag="tptr">
          <typ ikind="iuint" ttag="tint"/>
         </typ>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="73"/>
       <node name="loop"/>
       <node name="stmt" num="70"/>
       <node name="loop"/>
       <node name="stmt" num="68"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="28" origin="prim-exp" p-complexity="0">
     <location byte="137734" file="uninit_pointer.c" line="230"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4659" vname="ptr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="73"/>
       <node name="loop"/>
       <node name="stmt" num="70"/>
       <node name="loop"/>
       <node name="stmt" num="68"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="29" origin="prim-exp" p-complexity="0">
     <location byte="137734" file="uninit_pointer.c" line="230"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4662" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="73"/>
       <node name="loop"/>
       <node name="stmt" num="70"/>
       <node name="loop"/>
       <node name="stmt" num="68"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="30" origin="prim-op" p-complexity="1">
     <location byte="137734" file="uninit_pointer.c" line="230"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="ptr">
       <lval>
        <lhost>
         <var vid="4659" vname="ptr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="73"/>
       <node name="loop"/>
       <node name="stmt" num="70"/>
       <node name="loop"/>
       <node name="stmt" num="68"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="31" origin="prim-op" p-complexity="1">
     <location byte="137734" file="uninit_pointer.c" line="230"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="ptr">
       <lval>
        <lhost>
         <var vid="4659" vname="ptr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="73"/>
       <node name="loop"/>
       <node name="stmt" num="70"/>
       <node name="loop"/>
       <node name="stmt" num="68"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="32" origin="prim-op" p-complexity="3">
     <location byte="137734" file="uninit_pointer.c" line="230"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ikind="iuint" ttag="tint"/>
      <exp1 etag="lval" xstr="ptr">
       <lval>
        <lhost>
         <var vid="4659" vname="ptr"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="4662" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="73"/>
       <node name="loop"/>
       <node name="stmt" num="70"/>
       <node name="loop"/>
       <node name="stmt" num="68"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="33" origin="prim-op" p-complexity="2">
     <location byte="137734" file="uninit_pointer.c" line="230"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ikind="iuint" ttag="tint"/>
      <exp1 etag="lval" xstr="ptr">
       <lval>
        <lhost>
         <var vid="4659" vname="ptr"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="4662" vname="i"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="73"/>
       <node name="loop"/>
       <node name="stmt" num="70"/>
       <node name="loop"/>
       <node name="stmt" num="68"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="34" origin="prim-lval" p-complexity="3">
     <location byte="137734" file="uninit_pointer.c" line="230"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="((ptr +i i):(unsigned int*)">
       <exp1 etag="lval" xstr="ptr">
        <lval>
         <lhost>
          <var vid="4659" vname="ptr"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="4662" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iuint" ttag="tint"/>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="73"/>
       <node name="loop"/>
       <node name="stmt" num="70"/>
       <node name="loop"/>
       <node name="stmt" num="68"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="35" origin="prim-lval" p-complexity="3">
     <location byte="137734" file="uninit_pointer.c" line="230"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="((ptr +i i):(unsigned int*)">
       <exp1 etag="lval" xstr="ptr">
        <lval>
         <lhost>
          <var vid="4659" vname="ptr"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="4662" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iuint" ttag="tint"/>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="73"/>
       <node name="loop"/>
       <node name="stmt" num="70"/>
       <node name="loop"/>
       <node name="stmt" num="68"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="36" origin="prim-lval" p-complexity="3">
     <location byte="137734" file="uninit_pointer.c" line="230"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="((ptr +i i):(unsigned int*)">
       <exp1 etag="lval" xstr="ptr">
        <lval>
         <lhost>
          <var vid="4659" vname="ptr"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="4662" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iuint" ttag="tint"/>
       </typ>
      </exp>
      <typ ikind="iuint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="73"/>
       <node name="loop"/>
       <node name="stmt" num="70"/>
       <node name="loop"/>
       <node name="stmt" num="68"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="37" origin="prim-lval" p-complexity="3">
     <location byte="137734" file="uninit_pointer.c" line="230"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="((ptr +i i):(unsigned int*)">
       <exp1 etag="lval" xstr="ptr">
        <lval>
         <lhost>
          <var vid="4659" vname="ptr"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="i">
        <lval>
         <lhost>
          <var vid="4662" vname="i"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iuint" ttag="tint"/>
       </typ>
      </exp>
      <typ ikind="iuint" ttag="tint"/>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="73"/>
       <node name="loop"/>
       <node name="stmt" num="70"/>
       <node name="loop"/>
       <node name="stmt" num="68"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="2op" num="2"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="38" origin="prim-op" p-complexity="3">
     <location byte="137734" file="uninit_pointer.c" line="230"/>
     <predicate op="plusa" size="iuint" tag="int-underflow">
      <exp1 etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="4660" vname="a"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="*(((lval (ptr) +i lval (i)):(unsigned int*))">
       <lval>
        <lhost>
         <mem binop="indexpi" etag="binop" xstr="((ptr +i i):(unsigned int*)">
          <exp1 etag="lval" xstr="ptr">
           <lval>
            <lhost>
             <var vid="4659" vname="ptr"/>
            </lhost>
           </lval>
          </exp1>
          <exp2 etag="lval" xstr="i">
           <lval>
            <lhost>
             <var vid="4662" vname="i"/>
            </lhost>
           </lval>
          </exp2>
          <typ ttag="tptr">
           <typ ikind="iuint" ttag="tint"/>
          </typ>
         </mem>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="73"/>
       <node name="loop"/>
       <node name="stmt" num="70"/>
       <node name="loop"/>
       <node name="stmt" num="68"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="39" origin="prim-op" p-complexity="3">
     <location byte="137734" file="uninit_pointer.c" line="230"/>
     <predicate op="plusa" size="iuint" tag="int-overflow">
      <exp1 etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="4660" vname="a"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="*(((lval (ptr) +i lval (i)):(unsigned int*))">
       <lval>
        <lhost>
         <mem binop="indexpi" etag="binop" xstr="((ptr +i i):(unsigned int*)">
          <exp1 etag="lval" xstr="ptr">
           <lval>
            <lhost>
             <var vid="4659" vname="ptr"/>
            </lhost>
           </lval>
          </exp1>
          <exp2 etag="lval" xstr="i">
           <lval>
            <lhost>
             <var vid="4662" vname="i"/>
            </lhost>
           </lval>
          </exp2>
          <typ ttag="tptr">
           <typ ikind="iuint" ttag="tint"/>
          </typ>
         </mem>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="73"/>
       <node name="loop"/>
       <node name="stmt" num="70"/>
       <node name="loop"/>
       <node name="stmt" num="68"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="40" origin="prim-exp" p-complexity="0">
     <location byte="137691" file="uninit_pointer.c" line="228"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="4662" vname="i"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="73"/>
       <node name="loop"/>
       <node name="stmt" num="70"/>
       <node name="loop"/>
       <node name="stmt" num="68"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="41" origin="prim-op" p-complexity="2">
     <location byte="137691" file="uninit_pointer.c" line="228"/>
     <predicate op="plusa" size="iint" tag="int-underflow">
      <exp1 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="4662" vname="i"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="73"/>
       <node name="loop"/>
       <node name="stmt" num="70"/>
       <node name="loop"/>
       <node name="stmt" num="68"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="11" id="42" origin="prim-op" p-complexity="2">
     <location byte="137691" file="uninit_pointer.c" line="228"/>
     <predicate op="plusa" size="iint" tag="int-overflow">
      <exp1 etag="lval" xstr="i">
       <lval>
        <lhost>
         <var vid="4662" vname="i"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iint" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="73"/>
       <node name="loop"/>
       <node name="stmt" num="70"/>
       <node name="loop"/>
       <node name="stmt" num="68"/>
       <node name="if-then"/>
       <node name="stmt" num="60"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
   </primary-proof-obligations>
  </function>
  <header time="05/31/2016 16:55:52">
   <application file="uninit_pointer.xml" name="application"/>
  </header>
 </c-analysis>

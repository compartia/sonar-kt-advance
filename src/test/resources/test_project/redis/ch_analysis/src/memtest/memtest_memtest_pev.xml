<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <log>
   <log-entry delta-checkvalid="45" delta-invariant="1" time="05/24/2016 04:45:10"/>
  </log>
  <function name="memtest">
   <statistics checkvalid="45" invariant="1" invariant_with_api="0" total="46" total-proven="46"/>
   <open-proof-obligations/>
   <proof-obligations-discharged>
    <discharged id="1" method="check-valid" time="05/24/2016 04:45:10" type="valid-mem">
     <evidence comment="address of a variable is a valid memory region"/>
    </discharged>
    <discharged id="2" method="check-valid" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="address of a variable"/>
    </discharged>
    <discharged id="3" method="check-valid" time="05/24/2016 04:45:10" type="upper-bound">
     <evidence comment="address of a variable"/>
    </discharged>
    <discharged domain="symbolic sets" id="4" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#270"/>
    </discharged>
    <discharged id="5" method="check-valid" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="megabytes is a function parameter"/>
    </discharged>
    <discharged id="6" method="check-valid" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="passes is a function parameter"/>
    </discharged>
    <discharged id="7" method="check-valid" time="05/24/2016 04:45:10" type="format-string">
     <evidence comment=";Your memory passed this test. ; is a string literal"/>
    </discharged>
    <discharged id="8" method="check-valid" time="05/24/2016 04:45:10" type="not-null">
     <evidence comment="string-literal"/>
    </discharged>
    <discharged id="9" method="check-valid" time="05/24/2016 04:45:10" type="null-terminated">
     <evidence comment="string literal"/>
    </discharged>
    <discharged id="10" method="check-valid" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="11" method="check-valid" time="05/24/2016 04:45:10" type="ptr-upper-bound">
     <evidence comment="upperbound of constant string argument: ;Your memory passed this test. ;"/>
    </discharged>
    <discharged id="12" method="check-valid" time="05/24/2016 04:45:10" type="initialized-range">
     <evidence comment="constant string"/>
    </discharged>
    <discharged id="13" method="check-valid" time="05/24/2016 04:45:10" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="14" method="check-valid" time="05/24/2016 04:45:10" type="valid-mem">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="15" method="check-valid" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="16" method="check-valid" time="05/24/2016 04:45:10" type="upper-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="17" method="check-valid" time="05/24/2016 04:45:10" type="format-string">
     <evidence comment="Please if you are still in doubt use the following two tools: ; is a string literal"/>
    </discharged>
    <discharged id="18" method="check-valid" time="05/24/2016 04:45:10" type="not-null">
     <evidence comment="string-literal"/>
    </discharged>
    <discharged id="19" method="check-valid" time="05/24/2016 04:45:10" type="null-terminated">
     <evidence comment="string literal"/>
    </discharged>
    <discharged id="20" method="check-valid" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="21" method="check-valid" time="05/24/2016 04:45:10" type="ptr-upper-bound">
     <evidence comment="upperbound of constant string argument: Please if you are still in doubt use the following two tools: ;"/>
    </discharged>
    <discharged id="22" method="check-valid" time="05/24/2016 04:45:10" type="initialized-range">
     <evidence comment="constant string"/>
    </discharged>
    <discharged id="23" method="check-valid" time="05/24/2016 04:45:10" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="24" method="check-valid" time="05/24/2016 04:45:10" type="valid-mem">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="25" method="check-valid" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="26" method="check-valid" time="05/24/2016 04:45:10" type="upper-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="27" method="check-valid" time="05/24/2016 04:45:10" type="format-string">
     <evidence comment="1) memtest86: http://www.memtest86.com/ ; is a string literal"/>
    </discharged>
    <discharged id="28" method="check-valid" time="05/24/2016 04:45:10" type="not-null">
     <evidence comment="string-literal"/>
    </discharged>
    <discharged id="29" method="check-valid" time="05/24/2016 04:45:10" type="null-terminated">
     <evidence comment="string literal"/>
    </discharged>
    <discharged id="30" method="check-valid" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="31" method="check-valid" time="05/24/2016 04:45:10" type="ptr-upper-bound">
     <evidence comment="upperbound of constant string argument: 1) memtest86: http://www.memtest86.com/ ;"/>
    </discharged>
    <discharged id="32" method="check-valid" time="05/24/2016 04:45:10" type="initialized-range">
     <evidence comment="constant string"/>
    </discharged>
    <discharged id="33" method="check-valid" time="05/24/2016 04:45:10" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="34" method="check-valid" time="05/24/2016 04:45:10" type="valid-mem">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="35" method="check-valid" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="36" method="check-valid" time="05/24/2016 04:45:10" type="upper-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="37" method="check-valid" time="05/24/2016 04:45:10" type="format-string">
     <evidence comment="2) memtester: http://pyropus.ca/software/memtester/ ; is a string literal"/>
    </discharged>
    <discharged id="38" method="check-valid" time="05/24/2016 04:45:10" type="not-null">
     <evidence comment="string-literal"/>
    </discharged>
    <discharged id="39" method="check-valid" time="05/24/2016 04:45:10" type="null-terminated">
     <evidence comment="string literal"/>
    </discharged>
    <discharged id="40" method="check-valid" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="41" method="check-valid" time="05/24/2016 04:45:10" type="ptr-upper-bound">
     <evidence comment="upperbound of constant string argument: 2) memtester: http://pyropus.ca/software/memtester/ ;"/>
    </discharged>
    <discharged id="42" method="check-valid" time="05/24/2016 04:45:10" type="initialized-range">
     <evidence comment="constant string"/>
    </discharged>
    <discharged id="43" method="check-valid" time="05/24/2016 04:45:10" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="44" method="check-valid" time="05/24/2016 04:45:10" type="valid-mem">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="45" method="check-valid" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="46" method="check-valid" time="05/24/2016 04:45:10" type="upper-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
   </proof-obligations-discharged>
  </function>
  <header time="05/24/2016 04:45:10">
   <application file="src/memtest.c" name="application"/>
  </header>
 </c-analysis>

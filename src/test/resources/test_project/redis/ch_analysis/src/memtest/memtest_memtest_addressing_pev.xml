<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <log>
   <log-entry delta-checkvalid="33" delta-invariant="27" delta-lifted="2" time="05/24/2016 04:45:10"/>
  </log>
  <function name="memtest_addressing">
   <statistics checkvalid="33" invariant="27" invariant_with_api="2" total="77" total-proven="62"/>
   <open-proof-obligations>
    <open id="9" line="97" predicate="not-null"/>
    <open id="10" line="97" predicate="valid-mem"/>
    <open id="11" line="97" predicate="lower-bound"/>
    <open id="12" line="97" predicate="upper-bound"/>
    <open id="16" line="98" predicate="not-null"/>
    <open id="17" line="98" predicate="valid-mem"/>
    <open id="19" line="98" predicate="ptr-upper-bound-deref"/>
    <open id="32" line="104" predicate="initialized"/>
    <open id="35" line="104" predicate="valid-mem"/>
    <open id="52" line="105" predicate="valid-mem"/>
    <open id="55" line="105" predicate="initialized"/>
    <open id="58" line="105" predicate="valid-mem"/>
    <open id="62" line="109" predicate="not-null"/>
    <open id="63" line="109" predicate="valid-mem"/>
    <open id="65" line="109" predicate="ptr-upper-bound-deref"/>
   </open-proof-obligations>
   <proof-obligations-discharged>
    <discharged id="1" method="check-valid" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="bytes is a function parameter"/>
    </discharged>
    <discharged id="2" method="check-valid" time="05/24/2016 04:45:10" type="int-underflow">
     <evidence comment="underflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="3" method="check-valid" time="05/24/2016 04:45:10" type="int-overflow">
     <evidence comment="overflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="4" method="check-valid" time="05/24/2016 04:45:10" type="not-zero">
     <evidence comment="value is size of type"/>
    </discharged>
    <discharged id="5" method="check-valid" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="l is a function parameter"/>
    </discharged>
    <discharged domain="symbolic sets" id="6" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#96"/>
    </discharged>
    <discharged domain="symbolic sets" id="7" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#91"/>
    </discharged>
    <discharged domain="symbolic sets" id="8" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#95_xx_assignedAt#98"/>
    </discharged>
    <discharged id="13" method="check-valid" time="05/24/2016 04:45:10" type="cast" warning="word-size">
     <evidence comment="casting a pointer to integer type unsigned long"/>
    </discharged>
    <discharged domain="symbolic sets" id="14" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#95_xx_assignedAt#98"/>
    </discharged>
    <discharged domain="symbolic sets" id="15" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#95_xx_assignedAt#98"/>
    </discharged>
    <discharged id="18" method="check-valid" time="05/24/2016 04:45:10" type="ptr-lower-bound">
     <evidence comment="add non-negative number:  value is 1"/>
    </discharged>
    <discharged domain="symbolic sets" id="20" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#96"/>
    </discharged>
    <discharged domain="symbolic sets" id="21" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#96"/>
    </discharged>
    <discharged domain="symbolic sets" id="22" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#91"/>
    </discharged>
    <discharged id="23" method="check-valid" time="05/24/2016 04:45:10" type="int-underflow">
     <evidence comment="underflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="24" method="check-valid" time="05/24/2016 04:45:10" type="int-overflow">
     <evidence comment="overflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="25" method="check-valid" time="05/24/2016 04:45:10" type="cast">
     <evidence comment="casting constant value A to char"/>
    </discharged>
    <discharged domain="symbolic sets" id="26" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#96"/>
    </discharged>
    <discharged id="27" method="check-valid" time="05/24/2016 04:45:10" type="int-underflow">
     <evidence comment="underflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="28" method="check-valid" time="05/24/2016 04:45:10" type="int-overflow">
     <evidence comment="overflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="29" method="check-valid" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="l is a function parameter"/>
    </discharged>
    <discharged domain="symbolic sets" id="30" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#103"/>
    </discharged>
    <discharged domain="symbolic sets" id="31" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#91"/>
    </discharged>
    <discharged domain="symbolic sets" id="33" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#102_xx_assignedAt#109"/>
    </discharged>
    <discharged domain="linear equalities" id="34" method="invariants" time="05/24/2016 04:45:10" type="not-null">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="1" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged domain="valuesets" id="36" method="invariants" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="non-negative offset from base value: l"/>
    </discharged>
    <discharged domain="valuesets" id="37" method="invariants" time="05/24/2016 04:45:10" type="upper-bound">
     <evidence comment="externally provided address; dereferencability is checked as part of precondition"/>
    </discharged>
    <discharged id="38" method="check-valid" time="05/24/2016 04:45:10" type="cast">
     <evidence comment="cast to integer in context of if-expr"/>
    </discharged>
    <discharged domain="symbolic sets" id="39" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#102_xx_assignedAt#109"/>
    </discharged>
    <discharged id="40" method="check-valid" time="05/24/2016 04:45:10" type="format-string">
     <evidence comment=";*** MEMORY ADDRESSING ERROR: %p contains %lu ; is a string literal"/>
    </discharged>
    <discharged id="41" method="check-valid" time="05/24/2016 04:45:10" type="not-null">
     <evidence comment="string-literal"/>
    </discharged>
    <discharged id="42" method="check-valid" time="05/24/2016 04:45:10" type="null-terminated">
     <evidence comment="string literal"/>
    </discharged>
    <discharged id="43" method="check-valid" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="44" method="check-valid" time="05/24/2016 04:45:10" type="ptr-upper-bound">
     <evidence comment="upperbound of constant string argument: ;*** MEMORY ADDRESSING ERROR: %p contains %lu ;"/>
    </discharged>
    <discharged id="45" method="check-valid" time="05/24/2016 04:45:10" type="initialized-range">
     <evidence comment="constant string"/>
    </discharged>
    <discharged id="46" method="check-valid" time="05/24/2016 04:45:10" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="47" method="check-valid" time="05/24/2016 04:45:10" type="valid-mem">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="48" method="check-valid" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="49" method="check-valid" time="05/24/2016 04:45:10" type="upper-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="50" method="check-valid" time="05/24/2016 04:45:10" type="pointer-cast">
     <evidence comment="cast to void pointer"/>
    </discharged>
    <discharged domain="symbolic sets" id="51" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#102_xx_assignedAt#109"/>
    </discharged>
    <discharged domain="valuesets" id="53" method="invariants" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="non-negative offset from base value: l"/>
    </discharged>
    <discharged domain="valuesets" id="54" method="invariants" time="05/24/2016 04:45:10" type="upper-bound">
     <evidence comment="externally provided address; dereferencability is checked as part of precondition"/>
    </discharged>
    <discharged domain="symbolic sets" id="56" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#102_xx_assignedAt#109"/>
    </discharged>
    <discharged domain="linear equalities" id="57" method="invariants" time="05/24/2016 04:45:10" type="not-null">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="1" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged domain="valuesets" id="59" method="invariants" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="non-negative offset from base value: l"/>
    </discharged>
    <discharged domain="valuesets" id="60" method="invariants" time="05/24/2016 04:45:10" type="upper-bound">
     <evidence comment="externally provided address; dereferencability is checked as part of precondition"/>
    </discharged>
    <discharged domain="symbolic sets" id="61" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#102_xx_assignedAt#109"/>
    </discharged>
    <discharged id="64" method="check-valid" time="05/24/2016 04:45:10" type="ptr-lower-bound">
     <evidence comment="add non-negative number:  value is 1"/>
    </discharged>
    <discharged domain="symbolic sets" id="66" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#103"/>
    </discharged>
    <discharged domain="symbolic sets" id="67" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#103"/>
    </discharged>
    <discharged domain="symbolic sets" id="68" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#91"/>
    </discharged>
    <discharged id="69" method="check-valid" time="05/24/2016 04:45:10" type="int-underflow">
     <evidence comment="underflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="70" method="check-valid" time="05/24/2016 04:45:10" type="int-overflow">
     <evidence comment="overflow is well defined for unsigned types"/>
    </discharged>
    <discharged domain="symbolic sets" id="71" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#91"/>
    </discharged>
    <discharged id="72" method="check-valid" time="05/24/2016 04:45:10" type="int-underflow">
     <evidence comment="underflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="73" method="check-valid" time="05/24/2016 04:45:10" type="int-overflow">
     <evidence comment="overflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="74" method="check-valid" time="05/24/2016 04:45:10" type="cast">
     <evidence comment="casting constant value A to char"/>
    </discharged>
    <discharged domain="symbolic sets" id="75" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#103"/>
    </discharged>
    <discharged id="76" method="check-valid" time="05/24/2016 04:45:10" type="int-underflow">
     <evidence comment="underflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="77" method="check-valid" time="05/24/2016 04:45:10" type="int-overflow">
     <evidence comment="overflow is well defined for unsigned types"/>
    </discharged>
   </proof-obligations-discharged>
  </function>
  <header time="05/24/2016 04:45:10">
   <application file="src/memtest.c" name="application"/>
  </header>
 </c-analysis>

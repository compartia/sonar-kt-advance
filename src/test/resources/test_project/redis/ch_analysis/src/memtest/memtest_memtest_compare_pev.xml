<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <log>
   <log-entry delta-checkvalid="35" delta-invariant="17" delta-lifted="1" time="05/24/2016 04:45:10"/>
  </log>
  <function name="memtest_compare">
   <statistics checkvalid="35" invariant="17" invariant_with_api="1" total="87" total-proven="53"/>
   <open-proof-obligations>
    <open id="23" line="185" predicate="ptr-lower-bound"/>
    <open id="24" line="185" predicate="ptr-upper-bound-deref"/>
    <open id="27" line="187" predicate="initialized"/>
    <open id="29" line="187" predicate="not-null"/>
    <open id="30" line="187" predicate="valid-mem"/>
    <open id="31" line="187" predicate="lower-bound"/>
    <open id="32" line="187" predicate="upper-bound"/>
    <open id="33" line="187" predicate="initialized"/>
    <open id="35" line="187" predicate="not-null"/>
    <open id="36" line="187" predicate="valid-mem"/>
    <open id="37" line="187" predicate="lower-bound"/>
    <open id="38" line="187" predicate="upper-bound"/>
    <open id="51" line="188" predicate="valid-mem"/>
    <open id="52" line="188" predicate="lower-bound"/>
    <open id="53" line="188" predicate="upper-bound"/>
    <open id="56" line="188" predicate="valid-mem"/>
    <open id="57" line="188" predicate="lower-bound"/>
    <open id="58" line="188" predicate="upper-bound"/>
    <open id="59" line="188" predicate="initialized"/>
    <open id="61" line="188" predicate="not-null"/>
    <open id="62" line="188" predicate="valid-mem"/>
    <open id="63" line="188" predicate="lower-bound"/>
    <open id="64" line="188" predicate="upper-bound"/>
    <open id="65" line="188" predicate="initialized"/>
    <open id="67" line="188" predicate="not-null"/>
    <open id="68" line="188" predicate="valid-mem"/>
    <open id="69" line="188" predicate="lower-bound"/>
    <open id="70" line="188" predicate="upper-bound"/>
    <open id="72" line="192" predicate="not-null"/>
    <open id="73" line="192" predicate="valid-mem"/>
    <open id="75" line="192" predicate="ptr-upper-bound-deref"/>
    <open id="77" line="193" predicate="not-null"/>
    <open id="78" line="193" predicate="valid-mem"/>
    <open id="80" line="193" predicate="ptr-upper-bound-deref"/>
   </open-proof-obligations>
   <proof-obligations-discharged>
    <discharged id="1" method="check-valid" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="bytes is a function parameter"/>
    </discharged>
    <discharged id="2" method="check-valid" time="05/24/2016 04:45:10" type="int-underflow">
     <evidence comment="underflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="3" method="check-valid" time="05/24/2016 04:45:10" type="int-overflow">
     <evidence comment="overflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="4" method="check-valid" time="05/24/2016 04:45:10" type="not-zero">
     <evidence comment="value is size of type"/>
    </discharged>
    <discharged id="5" method="check-valid" time="05/24/2016 04:45:10" type="int-underflow">
     <evidence comment="underflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="6" method="check-valid" time="05/24/2016 04:45:10" type="int-overflow">
     <evidence comment="overflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="7" method="check-valid" time="05/24/2016 04:45:10" type="not-zero">
     <evidence comment="value is 2"/>
    </discharged>
    <discharged id="8" method="check-valid" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="bytes is a function parameter"/>
    </discharged>
    <discharged id="9" method="check-valid" time="05/24/2016 04:45:10" type="valid-mem">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="10" method="check-valid" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="11" method="check-valid" time="05/24/2016 04:45:10" type="upper-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="12" method="check-valid" time="05/24/2016 04:45:10" type="valid-mem">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="13" method="check-valid" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="14" method="check-valid" time="05/24/2016 04:45:10" type="upper-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="15" method="check-valid" time="05/24/2016 04:45:10" type="valid-mem">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="16" method="check-valid" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="17" method="check-valid" time="05/24/2016 04:45:10" type="upper-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="18" method="check-valid" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="l is a function parameter"/>
    </discharged>
    <discharged domain="symbolic sets" id="19" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#184"/>
    </discharged>
    <discharged domain="symbolic sets" id="20" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#180"/>
    </discharged>
    <discharged domain="linear equalities" id="21" method="invariants" time="05/24/2016 04:45:10" type="not-null">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="1" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged domain="symbolic sets" id="22" method="invariants" time="05/24/2016 04:45:10" type="valid-mem">
     <evidence comment="external address provided by parameter still points to valid memory"/>
    </discharged>
    <discharged domain="symbolic sets" id="25" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#186"/>
    </discharged>
    <discharged domain="symbolic sets" id="26" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#180"/>
    </discharged>
    <discharged domain="symbolic sets" id="28" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#184_xx_assignedAt#192"/>
    </discharged>
    <discharged domain="symbolic sets" id="34" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#185_xx_assignedAt#193"/>
    </discharged>
    <discharged id="39" method="check-valid" time="05/24/2016 04:45:10" type="format-string">
     <evidence comment=";*** MEMORY ERROR DETECTED: %p != %p (%lu vs %lu) ; is a string literal"/>
    </discharged>
    <discharged id="40" method="check-valid" time="05/24/2016 04:45:10" type="not-null">
     <evidence comment="string-literal"/>
    </discharged>
    <discharged id="41" method="check-valid" time="05/24/2016 04:45:10" type="null-terminated">
     <evidence comment="string literal"/>
    </discharged>
    <discharged id="42" method="check-valid" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="43" method="check-valid" time="05/24/2016 04:45:10" type="ptr-upper-bound">
     <evidence comment="upperbound of constant string argument: ;*** MEMORY ERROR DETECTED: %p != %p (%lu vs %lu) ;"/>
    </discharged>
    <discharged id="44" method="check-valid" time="05/24/2016 04:45:10" type="initialized-range">
     <evidence comment="constant string"/>
    </discharged>
    <discharged id="45" method="check-valid" time="05/24/2016 04:45:10" type="pointer-cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged id="46" method="check-valid" time="05/24/2016 04:45:10" type="valid-mem">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="47" method="check-valid" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="48" method="check-valid" time="05/24/2016 04:45:10" type="upper-bound">
     <evidence comment="constant string is allocated by compiler"/>
    </discharged>
    <discharged id="49" method="check-valid" time="05/24/2016 04:45:10" type="pointer-cast">
     <evidence comment="cast to void pointer"/>
    </discharged>
    <discharged domain="symbolic sets" id="50" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#184_xx_assignedAt#192"/>
    </discharged>
    <discharged id="54" method="check-valid" time="05/24/2016 04:45:10" type="pointer-cast">
     <evidence comment="cast to void pointer"/>
    </discharged>
    <discharged domain="symbolic sets" id="55" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#185_xx_assignedAt#193"/>
    </discharged>
    <discharged domain="symbolic sets" id="60" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#184_xx_assignedAt#192"/>
    </discharged>
    <discharged domain="symbolic sets" id="66" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#185_xx_assignedAt#193"/>
    </discharged>
    <discharged domain="symbolic sets" id="71" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#184_xx_assignedAt#192"/>
    </discharged>
    <discharged id="74" method="check-valid" time="05/24/2016 04:45:10" type="ptr-lower-bound">
     <evidence comment="add non-negative number:  value is 1"/>
    </discharged>
    <discharged domain="symbolic sets" id="76" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#185_xx_assignedAt#193"/>
    </discharged>
    <discharged id="79" method="check-valid" time="05/24/2016 04:45:10" type="ptr-lower-bound">
     <evidence comment="add non-negative number:  value is 1"/>
    </discharged>
    <discharged domain="symbolic sets" id="81" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#186"/>
    </discharged>
    <discharged domain="symbolic sets" id="82" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#186"/>
    </discharged>
    <discharged domain="symbolic sets" id="83" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#180"/>
    </discharged>
    <discharged id="84" method="check-valid" time="05/24/2016 04:45:10" type="cast">
     <evidence comment="casting constant value = to char"/>
    </discharged>
    <discharged domain="symbolic sets" id="85" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#186"/>
    </discharged>
    <discharged id="86" method="check-valid" time="05/24/2016 04:45:10" type="int-underflow">
     <evidence comment="underflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="87" method="check-valid" time="05/24/2016 04:45:10" type="int-overflow">
     <evidence comment="overflow is well defined for unsigned types"/>
    </discharged>
   </proof-obligations-discharged>
  </function>
  <header time="05/24/2016 04:45:10">
   <application file="src/memtest.c" name="application"/>
  </header>
 </c-analysis>

<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <log>
   <log-entry delta-checkvalid="32" delta-invariant="21" delta-lifted="5" time="05/24/2016 04:45:10"/>
  </log>
  <function name="memtest_non_destructive_swap">
   <statistics checkvalid="32" invariant="21" invariant_with_api="5" total="64" total-proven="58"/>
   <open-proof-obligations>
    <open id="11" line="262" predicate="initialized"/>
    <open id="17" line="262" predicate="ptr-upper-bound-deref"/>
    <open id="23" line="263" predicate="initialized"/>
    <open id="31" line="263" predicate="ptr-upper-bound-deref"/>
    <open id="41" line="264" predicate="ptr-upper-bound-deref"/>
    <open id="55" line="265" predicate="ptr-upper-bound-deref"/>
   </open-proof-obligations>
   <proof-obligations-discharged>
    <discharged domain="linear equalities" id="1" method="invariants" time="05/24/2016 04:45:10" type="pointer-cast">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="1" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged id="2" method="check-valid" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="addr is a function parameter"/>
    </discharged>
    <discharged id="3" method="check-valid" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="size is a function parameter"/>
    </discharged>
    <discharged id="4" method="check-valid" time="05/24/2016 04:45:10" type="int-underflow">
     <evidence comment="underflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="5" method="check-valid" time="05/24/2016 04:45:10" type="int-overflow">
     <evidence comment="overflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="6" method="check-valid" time="05/24/2016 04:45:10" type="not-zero">
     <evidence comment="value is size of type"/>
    </discharged>
    <discharged id="7" method="check-valid" time="05/24/2016 04:45:10" type="signed-to-unsigned-cast">
     <evidence comment="constant value 0 fits in type unsigned long"/>
    </discharged>
    <discharged domain="symbolic sets" id="8" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#259"/>
    </discharged>
    <discharged domain="symbolic sets" id="9" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#255"/>
    </discharged>
    <discharged id="10" method="check-valid" time="05/24/2016 04:45:10" type="cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged domain="symbolic sets" id="12" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#254"/>
    </discharged>
    <discharged domain="symbolic sets" id="13" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#259"/>
    </discharged>
    <discharged domain="linear equalities" id="14" method="invariants" time="05/24/2016 04:45:10" type="not-null">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="2" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged domain="symbolic sets" id="15" method="invariants" time="05/24/2016 04:45:10" type="valid-mem">
     <evidence comment="external address provided by parameter still points to valid memory"/>
    </discharged>
    <discharged domain="intervals" id="16" method="invariants" time="05/24/2016 04:45:10" type="ptr-lower-bound">
     <evidence comment="non-negative lower bound on pointer increment: 0"/>
    </discharged>
    <discharged id="18" method="check-valid" time="05/24/2016 04:45:10" type="not-null">
     <evidence comment="arguments of pointer arithmetic are checked for null"/>
    </discharged>
    <discharged id="19" method="check-valid" time="05/24/2016 04:45:10" type="valid-mem">
     <evidence comment="pointer arithmetic stays within memory region"/>
    </discharged>
    <discharged id="20" method="check-valid" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </discharged>
    <discharged id="21" method="check-valid" time="05/24/2016 04:45:10" type="upper-bound">
     <evidence comment="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </discharged>
    <discharged id="22" method="check-valid" time="05/24/2016 04:45:10" type="cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged domain="symbolic sets" id="24" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#254"/>
    </discharged>
    <discharged domain="symbolic sets" id="25" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#259"/>
    </discharged>
    <discharged id="26" method="check-valid" time="05/24/2016 04:45:10" type="int-underflow">
     <evidence comment="underflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="27" method="check-valid" time="05/24/2016 04:45:10" type="int-overflow">
     <evidence comment="overflow is well defined for unsigned types"/>
    </discharged>
    <discharged domain="linear equalities" id="28" method="invariants" time="05/24/2016 04:45:10" type="not-null">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="2" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged domain="symbolic sets" id="29" method="invariants" time="05/24/2016 04:45:10" type="valid-mem">
     <evidence comment="external address provided by parameter still points to valid memory"/>
    </discharged>
    <discharged domain="intervals" id="30" method="invariants" time="05/24/2016 04:45:10" type="ptr-lower-bound">
     <evidence comment="non-negative lower bound on pointer increment: 1"/>
    </discharged>
    <discharged id="32" method="check-valid" time="05/24/2016 04:45:10" type="not-null">
     <evidence comment="arguments of pointer arithmetic are checked for null"/>
    </discharged>
    <discharged id="33" method="check-valid" time="05/24/2016 04:45:10" type="valid-mem">
     <evidence comment="pointer arithmetic stays within memory region"/>
    </discharged>
    <discharged id="34" method="check-valid" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </discharged>
    <discharged id="35" method="check-valid" time="05/24/2016 04:45:10" type="upper-bound">
     <evidence comment="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </discharged>
    <discharged domain="symbolic sets" id="36" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#254"/>
    </discharged>
    <discharged domain="symbolic sets" id="37" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#259"/>
    </discharged>
    <discharged domain="linear equalities" id="38" method="invariants" time="05/24/2016 04:45:10" type="not-null">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="2" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged domain="symbolic sets" id="39" method="invariants" time="05/24/2016 04:45:10" type="valid-mem">
     <evidence comment="external address provided by parameter still points to valid memory"/>
    </discharged>
    <discharged domain="intervals" id="40" method="invariants" time="05/24/2016 04:45:10" type="ptr-lower-bound">
     <evidence comment="non-negative lower bound on pointer increment: 0"/>
    </discharged>
    <discharged id="42" method="check-valid" time="05/24/2016 04:45:10" type="not-null">
     <evidence comment="arguments of pointer arithmetic are checked for null"/>
    </discharged>
    <discharged id="43" method="check-valid" time="05/24/2016 04:45:10" type="valid-mem">
     <evidence comment="pointer arithmetic stays within memory region"/>
    </discharged>
    <discharged id="44" method="check-valid" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </discharged>
    <discharged id="45" method="check-valid" time="05/24/2016 04:45:10" type="upper-bound">
     <evidence comment="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </discharged>
    <discharged id="46" method="check-valid" time="05/24/2016 04:45:10" type="cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged domain="symbolic sets" id="47" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#263"/>
    </discharged>
    <discharged domain="symbolic sets" id="48" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#254"/>
    </discharged>
    <discharged domain="symbolic sets" id="49" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#259"/>
    </discharged>
    <discharged id="50" method="check-valid" time="05/24/2016 04:45:10" type="int-underflow">
     <evidence comment="underflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="51" method="check-valid" time="05/24/2016 04:45:10" type="int-overflow">
     <evidence comment="overflow is well defined for unsigned types"/>
    </discharged>
    <discharged domain="linear equalities" id="52" method="invariants" time="05/24/2016 04:45:10" type="not-null">
     <evidence comment="delegating proof obligation to function api"/>
     <assumptions>
      <uses a-id="2" a-type="api"/>
     </assumptions>
    </discharged>
    <discharged domain="symbolic sets" id="53" method="invariants" time="05/24/2016 04:45:10" type="valid-mem">
     <evidence comment="external address provided by parameter still points to valid memory"/>
    </discharged>
    <discharged domain="intervals" id="54" method="invariants" time="05/24/2016 04:45:10" type="ptr-lower-bound">
     <evidence comment="non-negative lower bound on pointer increment: 1"/>
    </discharged>
    <discharged id="56" method="check-valid" time="05/24/2016 04:45:10" type="not-null">
     <evidence comment="arguments of pointer arithmetic are checked for null"/>
    </discharged>
    <discharged id="57" method="check-valid" time="05/24/2016 04:45:10" type="valid-mem">
     <evidence comment="pointer arithmetic stays within memory region"/>
    </discharged>
    <discharged id="58" method="check-valid" time="05/24/2016 04:45:10" type="lower-bound">
     <evidence comment="result of pointer arithmetic is guaranteed to satisfy lowerbound by inductive hypothesis"/>
    </discharged>
    <discharged id="59" method="check-valid" time="05/24/2016 04:45:10" type="upper-bound">
     <evidence comment="result of pointer arithmetic is guaranteed to satisfy upperbound by inductive hypothesis"/>
    </discharged>
    <discharged id="60" method="check-valid" time="05/24/2016 04:45:10" type="cast">
     <evidence comment="source and target type are the same"/>
    </discharged>
    <discharged domain="symbolic sets" id="61" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#262"/>
    </discharged>
    <discharged domain="symbolic sets" id="62" method="invariants" time="05/24/2016 04:45:10" type="initialized">
     <evidence comment="assignedAt#259"/>
    </discharged>
    <discharged id="63" method="check-valid" time="05/24/2016 04:45:10" type="int-underflow">
     <evidence comment="underflow is well defined for unsigned types"/>
    </discharged>
    <discharged id="64" method="check-valid" time="05/24/2016 04:45:10" type="int-overflow">
     <evidence comment="overflow is well defined for unsigned types"/>
    </discharged>
   </proof-obligations-discharged>
  </function>
  <header time="05/24/2016 04:45:10">
   <application file="src/memtest.c" name="application"/>
  </header>
 </c-analysis>

<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="memtest_progress_start">
   <program-locations>
    <program-location>
     <locations>
      <loc byte="30609" file="src/memtest.c" line="63"/>
     </locations>
     <cfg-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="1"/>
     </cfg-context>
     <invariants>
      <inv nrv="1" pv="1"/>
      <inv nrv="2" pv="2"/>
      <inv nrv="14" pv="2"/>
      <inv nrv="12" pv="2"/>
      <inv nrv="19" pv="30"/>
      <inv nrv="13" pv="26"/>
      <inv nrv="9" pv="12"/>
      <inv nrv="13" pv="25"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="30639" file="src/memtest.c" line="65"/>
     </locations>
     <cfg-context>
      <node name="instr" num="1"/>
      <node name="stmt" num="5"/>
      <node name="loop"/>
      <node name="stmt" num="2"/>
     </cfg-context>
     <invariants>
      <inv nrv="14" pv="17"/>
      <inv nrv="15" pv="17"/>
      <inv nrv="1" pv="1"/>
      <inv nrv="2" pv="2"/>
      <inv nrv="14" pv="2"/>
      <inv nrv="12" pv="2"/>
      <inv nrv="16" pv="30"/>
      <inv nrv="7" pv="10"/>
      <inv nrv="14" pv="22"/>
      <inv nrv="15" pv="22"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="30685" file="src/memtest.c" line="65"/>
     </locations>
     <cfg-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="5"/>
      <node name="loop"/>
      <node name="stmt" num="2"/>
     </cfg-context>
     <invariants>
      <inv nrv="14" pv="17"/>
      <inv nrv="15" pv="17"/>
      <inv nrv="1" pv="1"/>
      <inv nrv="2" pv="2"/>
      <inv nrv="14" pv="2"/>
      <inv nrv="12" pv="2"/>
      <inv nrv="16" pv="30"/>
      <inv nrv="13" pv="16"/>
      <inv nrv="0" pv="0"/>
      <inv nrv="13" pv="15"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="30639" file="src/memtest.c" line="65"/>
     </locations>
     <cfg-context>
      <node name="if-expr"/>
      <node name="stmt" num="3"/>
      <node name="loop"/>
      <node name="stmt" num="2"/>
     </cfg-context>
     <invariants>
      <inv nrv="14" pv="17"/>
      <inv nrv="15" pv="17"/>
      <inv nrv="1" pv="1"/>
      <inv nrv="2" pv="2"/>
      <inv nrv="14" pv="2"/>
      <inv nrv="12" pv="2"/>
      <inv nrv="16" pv="30"/>
      <inv nrv="14" pv="27"/>
      <inv nrv="15" pv="27"/>
      <inv nrv="10" pv="13"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="30702" file="src/memtest.c" line="66"/>
     </locations>
     <cfg-context>
      <node name="instr" num="0"/>
      <node name="stmt" num="6"/>
     </cfg-context>
     <invariants>
      <inv nrv="14" pv="17"/>
      <inv nrv="15" pv="17"/>
      <inv nrv="1" pv="1"/>
      <inv nrv="2" pv="2"/>
      <inv nrv="14" pv="2"/>
      <inv nrv="12" pv="2"/>
      <inv nrv="16" pv="30"/>
      <inv nrv="13" pv="24"/>
      <inv nrv="8" pv="11"/>
      <inv nrv="13" pv="23"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="30782" file="src/memtest.c" line="67"/>
     </locations>
     <cfg-context>
      <node name="instr" num="1"/>
      <node name="stmt" num="6"/>
     </cfg-context>
     <invariants>
      <inv nrv="14" pv="17"/>
      <inv nrv="15" pv="17"/>
      <inv nrv="1" pv="1"/>
      <inv nrv="2" pv="2"/>
      <inv nrv="14" pv="2"/>
      <inv nrv="12" pv="2"/>
      <inv nrv="16" pv="30"/>
      <inv nrv="13" pv="29"/>
      <inv nrv="11" pv="14"/>
      <inv nrv="13" pv="28"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="30876" file="src/memtest.c" line="68"/>
     </locations>
     <cfg-context>
      <node name="instr" num="2"/>
      <node name="stmt" num="6"/>
     </cfg-context>
     <invariants>
      <inv nrv="14" pv="17"/>
      <inv nrv="15" pv="17"/>
      <inv nrv="1" pv="1"/>
      <inv nrv="2" pv="2"/>
      <inv nrv="14" pv="2"/>
      <inv nrv="12" pv="2"/>
      <inv nrv="16" pv="30"/>
      <inv nrv="13" pv="19"/>
      <inv nrv="5" pv="6"/>
      <inv nrv="13" pv="18"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="30905" file="src/memtest.c" line="69"/>
     </locations>
     <cfg-context>
      <node name="instr" num="3"/>
      <node name="stmt" num="6"/>
     </cfg-context>
     <invariants>
      <inv nrv="14" pv="17"/>
      <inv nrv="15" pv="17"/>
      <inv nrv="1" pv="1"/>
      <inv nrv="2" pv="2"/>
      <inv nrv="14" pv="2"/>
      <inv nrv="12" pv="2"/>
      <inv nrv="16" pv="30"/>
      <inv nrv="13" pv="21"/>
      <inv nrv="1" pv="8"/>
      <inv nrv="6" pv="7"/>
      <inv nrv="2" pv="9"/>
      <inv nrv="14" pv="9"/>
      <inv nrv="12" pv="9"/>
      <inv nrv="13" pv="20"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="30943" file="src/memtest.c" line="70"/>
     </locations>
     <cfg-context>
      <node name="instr" num="4"/>
      <node name="stmt" num="6"/>
     </cfg-context>
     <invariants>
      <inv nrv="14" pv="17"/>
      <inv nrv="15" pv="17"/>
      <inv nrv="1" pv="1"/>
      <inv nrv="2" pv="2"/>
      <inv nrv="14" pv="2"/>
      <inv nrv="12" pv="2"/>
      <inv nrv="16" pv="30"/>
      <inv nrv="4" pv="5"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="30969" file="src/memtest.c" line="71"/>
     </locations>
     <cfg-context>
      <node name="instr" num="5"/>
      <node name="stmt" num="6"/>
     </cfg-context>
     <invariants>
      <inv nrv="14" pv="17"/>
      <inv nrv="15" pv="17"/>
      <inv nrv="1" pv="1"/>
      <inv nrv="4" pv="4"/>
      <inv nrv="17" pv="4"/>
      <inv nrv="2" pv="2"/>
      <inv nrv="14" pv="2"/>
      <inv nrv="12" pv="2"/>
      <inv nrv="16" pv="30"/>
      <inv nrv="3" pv="3"/>
     </invariants>
    </program-location>
    <program-location>
     <locations>
      <loc byte="31014" file="src/memtest.c" line="72"/>
     </locations>
     <cfg-context>
      <node name="instr" num="6"/>
      <node name="stmt" num="6"/>
     </cfg-context>
     <invariants>
      <inv nrv="14" pv="17"/>
      <inv nrv="15" pv="17"/>
      <inv nrv="1" pv="1"/>
      <inv nrv="18" pv="31"/>
      <inv nrv="4" pv="4"/>
      <inv nrv="17" pv="4"/>
      <inv nrv="2" pv="2"/>
      <inv nrv="14" pv="2"/>
      <inv nrv="12" pv="2"/>
      <inv nrv="16" pv="30"/>
     </invariants>
    </program-location>
   </program-locations>
   <program-value-table size="32">
    <pvals index="0">
     <pval arg="4" id="24"/>
     <pval arg="2" id="25"/>
    </pvals>
    <pvals index="1">
     <pval>
      <lhost>
       <var vid="945" vname="pass"/>
      </lhost>
     </pval>
    </pvals>
    <pvals index="2">
     <pval>
      <lhost>
       <var vid="944" vname="title"/>
      </lhost>
     </pval>
    </pvals>
    <pvals index="3">
     <pval arg="3" id="84"/>
     <pval arg="3" id="85"/>
    </pvals>
    <pvals index="4">
     <pval>
      <lhost>
       <var vid="939" vname="progress_printed"/>
      </lhost>
     </pval>
    </pvals>
    <pvals index="5">
     <pval arg="3" id="78"/>
    </pvals>
    <pvals index="6">
     <pval arg="4" id="57"/>
     <pval arg="2" id="58"/>
    </pvals>
    <pvals index="7">
     <pval arg="4" id="67"/>
     <pval arg="2" id="68"/>
    </pvals>
    <pvals index="8">
     <pval arg="1" id="77"/>
    </pvals>
    <pvals index="9">
     <pval arg="1" id="73"/>
     <pval arg="1" id="74"/>
     <pval arg="2" id="75"/>
     <pval arg="2" id="76"/>
    </pvals>
    <pvals index="10">
     <pval arg="3" id="31"/>
     <pval arg="3" id="32"/>
    </pvals>
    <pvals index="11">
     <pval arg="4" id="37"/>
     <pval arg="2" id="38"/>
    </pvals>
    <pvals index="12">
     <pval arg="4" id="5"/>
     <pval arg="2" id="6"/>
    </pvals>
    <pvals index="13">
     <pval arg="3" id="16"/>
     <pval arg="3" id="17"/>
    </pvals>
    <pvals index="14">
     <pval arg="4" id="47"/>
     <pval arg="2" id="48"/>
    </pvals>
    <pvals index="15">
     <pval arg="1" id="20"/>
     <pval arg="1" id="21"/>
     <pval arg="1" id="22"/>
     <pval arg="2" id="23"/>
     <pval arg="3" id="24"/>
     <pval arg="1" id="25"/>
     <pval arg="1" id="27"/>
     <pval arg="2" id="28"/>
     <pval arg="2" id="29"/>
    </pvals>
    <pvals index="16">
     <pval arg="3" id="26"/>
    </pvals>
    <pvals index="17">
     <pval>
      <lhost>
       <var vid="946" vname="j"/>
      </lhost>
     </pval>
    </pvals>
    <pvals index="18">
     <pval arg="1" id="53"/>
     <pval arg="1" id="54"/>
     <pval arg="1" id="55"/>
     <pval arg="2" id="56"/>
     <pval arg="3" id="57"/>
     <pval arg="1" id="58"/>
     <pval arg="1" id="60"/>
     <pval arg="2" id="61"/>
     <pval arg="2" id="62"/>
    </pvals>
    <pvals index="19">
     <pval arg="3" id="59"/>
    </pvals>
    <pvals index="20">
     <pval arg="1" id="63"/>
     <pval arg="1" id="64"/>
     <pval arg="1" id="65"/>
     <pval arg="2" id="66"/>
     <pval arg="3" id="67"/>
     <pval arg="1" id="68"/>
     <pval arg="1" id="70"/>
     <pval arg="2" id="71"/>
     <pval arg="2" id="72"/>
    </pvals>
    <pvals index="21">
     <pval arg="3" id="69"/>
    </pvals>
    <pvals index="22">
     <pval arg="1" id="30"/>
     <pval arg="2" id="31"/>
     <pval arg="2" id="32"/>
    </pvals>
    <pvals index="23">
     <pval arg="1" id="33"/>
     <pval arg="1" id="34"/>
     <pval arg="1" id="35"/>
     <pval arg="2" id="36"/>
     <pval arg="3" id="37"/>
     <pval arg="1" id="38"/>
     <pval arg="1" id="40"/>
     <pval arg="2" id="41"/>
     <pval arg="2" id="42"/>
    </pvals>
    <pvals index="24">
     <pval arg="3" id="39"/>
    </pvals>
    <pvals index="25">
     <pval arg="1" id="1"/>
     <pval arg="1" id="2"/>
     <pval arg="1" id="3"/>
     <pval arg="2" id="4"/>
     <pval arg="3" id="5"/>
     <pval arg="1" id="6"/>
     <pval arg="1" id="8"/>
     <pval arg="2" id="9"/>
     <pval arg="2" id="10"/>
    </pvals>
    <pvals index="26">
     <pval arg="3" id="7"/>
    </pvals>
    <pvals index="27">
     <pval arg="1" id="11"/>
    </pvals>
    <pvals index="28">
     <pval arg="1" id="43"/>
     <pval arg="1" id="44"/>
     <pval arg="1" id="45"/>
     <pval arg="2" id="46"/>
     <pval arg="3" id="47"/>
     <pval arg="1" id="48"/>
     <pval arg="1" id="50"/>
     <pval arg="2" id="51"/>
     <pval arg="2" id="52"/>
    </pvals>
    <pvals index="29">
     <pval arg="3" id="49"/>
    </pvals>
    <pvals index="30">
     <pval etag="lval" external="yes" property="vm" xstr="title">
      <lval>
       <lhost>
        <var vid="944" vname="title"/>
       </lhost>
      </lval>
     </pval>
    </pvals>
    <pvals index="31">
     <pval>
      <lhost>
       <var vid="940" vname="progress_full"/>
      </lhost>
     </pval>
    </pvals>
   </program-value-table>
   <non-relational-value-table size="20">
    <nrv cn="null-terminator-pos" etag="cnapp" index="0" tag="fv" xstr="null-terminator-pos[caste (&quot;.&quot;:(char*))]">
     <arg etag="caste" xstr="caste (&quot;.&quot;:(char*))">
      <typ ttag="tptr">
       <attributes>
        <attr attrname="restrict"/>
       </attributes>
       <typ ikind="ichar" ttag="tint">
        <attributes>
         <attr attrname="const"/>
        </attributes>
       </typ>
      </typ>
      <exp etag="const" xstr="&quot;.&quot;">
       <constant ctag="cstr" strValue="."/>
      </exp>
     </arg>
     <typ ikind="iint" ttag="tint"/>
    </nrv>
    <nrv etag="lval" index="1" tag="fv" xstr="pass">
     <lval>
      <lhost>
       <var vid="945" vname="pass"/>
      </lhost>
     </lval>
    </nrv>
    <nrv etag="lval" index="2" tag="fv" xstr="title">
     <lval>
      <lhost>
       <var vid="944" vname="title"/>
      </lhost>
     </lval>
    </nrv>
    <nrv index="3" tag="range" value="3"/>
    <nrv index="4" tag="range" value="0"/>
    <nrv cn="null-terminator-pos" etag="cnapp" index="5" tag="fv" xstr="null-terminator-pos[caste (&quot;[H[2K&quot;:(char*))]">
     <arg etag="caste" xstr="caste (&quot;[H[2K&quot;:(char*))">
      <typ ttag="tptr">
       <attributes>
        <attr attrname="restrict"/>
       </attributes>
       <typ ikind="ichar" ttag="tint">
        <attributes>
         <attr attrname="const"/>
        </attributes>
       </typ>
      </typ>
      <exp etag="const" xstr="&quot;[H[2K&quot;">
       <constant ctag="cstr" strValue="[H[2K"/>
      </exp>
     </arg>
     <typ ikind="iint" ttag="tint"/>
    </nrv>
    <nrv cn="null-terminator-pos" etag="cnapp" index="6" tag="fv" xstr="null-terminator-pos[caste (&quot;%s [%d] ;&quot;:(char*))]">
     <arg etag="caste" xstr="caste (&quot;%s [%d] ;&quot;:(char*))">
      <typ ttag="tptr">
       <attributes>
        <attr attrname="restrict"/>
       </attributes>
       <typ ikind="ichar" ttag="tint">
        <attributes>
         <attr attrname="const"/>
        </attributes>
       </typ>
      </typ>
      <exp etag="const" xstr="&quot;%s [%d] ;&quot;">
       <constant ctag="cstr" strValue="%s [%d] ;"/>
      </exp>
     </arg>
     <typ ikind="iint" ttag="tint"/>
    </nrv>
    <nrv index="7" tag="range" value="1"/>
    <nrv cn="null-terminator-pos" etag="cnapp" index="8" tag="fv" xstr="null-terminator-pos[caste (&quot;Please keep the test running several minutes per GB of memory. ;&quot;:(char*))]">
     <arg etag="caste" xstr="caste (&quot;Please keep the test running several minutes per GB of memory. ;&quot;:(char*))">
      <typ ttag="tptr">
       <attributes>
        <attr attrname="restrict"/>
       </attributes>
       <typ ikind="ichar" ttag="tint">
        <attributes>
         <attr attrname="const"/>
        </attributes>
       </typ>
      </typ>
      <exp etag="const" xstr="&quot;Please keep the test running several minutes per GB of memory. ;&quot;">
       <constant ctag="cstr" strValue="Please keep the test running several minutes per GB of memory. ;"/>
      </exp>
     </arg>
     <typ ikind="iint" ttag="tint"/>
    </nrv>
    <nrv cn="null-terminator-pos" etag="cnapp" index="9" tag="fv" xstr="null-terminator-pos[caste (&quot;[H[2J&quot;:(char*))]">
     <arg etag="caste" xstr="caste (&quot;[H[2J&quot;:(char*))">
      <typ ttag="tptr">
       <attributes>
        <attr attrname="restrict"/>
       </attributes>
       <typ ikind="ichar" ttag="tint">
        <attributes>
         <attr attrname="const"/>
        </attributes>
       </typ>
      </typ>
      <exp etag="const" xstr="&quot;[H[2J&quot;">
       <constant ctag="cstr" strValue="[H[2J"/>
      </exp>
     </arg>
     <typ ikind="iint" ttag="tint"/>
    </nrv>
    <nrv index="10" tag="range" value="2"/>
    <nrv cn="null-terminator-pos" etag="cnapp" index="11" tag="fv" xstr="null-terminator-pos[caste (&quot;Also check http://www.memtest86.com/ and http://pyropus.ca/software/memtester/&quot;:(char*))]">
     <arg etag="caste" xstr="caste (&quot;Also check http://www.memtest86.com/ and http://pyropus.ca/software/memtester/&quot;:(char*))">
      <typ ttag="tptr">
       <attributes>
        <attr attrname="restrict"/>
       </attributes>
       <typ ikind="ichar" ttag="tint">
        <attributes>
         <attr attrname="const"/>
        </attributes>
       </typ>
      </typ>
      <exp etag="const" xstr="&quot;Also check http://www.memtest86.com/ and http://pyropus.ca/software/memtester/&quot;">
       <constant ctag="cstr" strValue="Also check http://www.memtest86.com/ and http://pyropus.ca/software/memtester/"/>
      </exp>
     </arg>
     <typ ikind="iint" ttag="tint"/>
    </nrv>
    <nrv address-type="external" index="12" tag="vs" value="0">
     <base etag="lval" xstr="title">
      <lval>
       <lhost>
        <var vid="944" vname="title"/>
       </lhost>
      </lval>
     </base>
    </nrv>
    <nrv index="13" lb="1" tag="range"/>
    <nrv index="14" lb="0" tag="range"/>
    <nrv index="15" tag="ss">
     <sym name="assignedAt#65"/>
    </nrv>
    <nrv index="16" tag="ss">
     <sym name="invalid"/>
    </nrv>
    <nrv index="17" tag="ss">
     <sym name="assignedAt#70"/>
    </nrv>
    <nrv index="18" tag="ss">
     <sym name="assignedAt#71"/>
    </nrv>
    <nrv index="19" tag="ss">
     <sym name="valid"/>
    </nrv>
   </non-relational-value-table>
  </function>
  <header time="05/24/2016 04:38:38">
   <application file="src/memtest.c" name="application"/>
  </header>
 </c-analysis>

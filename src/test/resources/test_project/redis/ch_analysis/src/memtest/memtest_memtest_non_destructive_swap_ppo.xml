<?xml version="1.0" encoding="UTF-8"?>
 <c-analysis>
  <function name="memtest_non_destructive_swap">
   <statistics avg-context-complexity="4.45" avg-predicate-complexity="1.97" context-complexity="285" predicate-complexity="126" size="64"/>
   <unconstrained-external-functions/>
   <primary-proof-obligations>
    <proof-obligation c-complexity="0" id="1" origin="prim-exp" p-complexity="1">
     <location byte="36118" file="src/memtest.c" line="254"/>
     <predicate tag="pointer-cast">
      <tfrom ttag="tvoid"/>
      <tto ikind="iulong" ttag="tint">
       <attributes>
        <attr attrname="volatile"/>
       </attributes>
      </tto>
      <exp etag="lval" xstr="addr">
       <lval>
        <lhost>
         <var vid="1050" vname="addr"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="109"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="2" origin="prim-exp" p-complexity="0">
     <location byte="36118" file="src/memtest.c" line="254"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="1050" vname="addr"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="109"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="3" origin="prim-exp" p-complexity="0">
     <location byte="36156" file="src/memtest.c" line="255"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="1051" vname="size"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="109"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="4" origin="prim-op" p-complexity="2">
     <location byte="36156" file="src/memtest.c" line="255"/>
     <predicate op="div" size="iulong" tag="int-underflow">
      <exp1 etag="lval" xstr="size">
       <lval>
        <lhost>
         <var vid="1051" vname="size"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="sizeof" xstr="sizeof (unsigned long)">
       <typ ikind="iulong" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="109"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="5" origin="prim-op" p-complexity="2">
     <location byte="36156" file="src/memtest.c" line="255"/>
     <predicate op="div" size="iulong" tag="int-overflow">
      <exp1 etag="lval" xstr="size">
       <lval>
        <lhost>
         <var vid="1051" vname="size"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="sizeof" xstr="sizeof (unsigned long)">
       <typ ikind="iulong" ttag="tint"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="109"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="6" origin="prim-op" p-complexity="0">
     <location byte="36156" file="src/memtest.c" line="255"/>
     <predicate tag="not-zero">
      <exp etag="sizeof" xstr="sizeof (unsigned long)">
       <typ ikind="iulong" ttag="tint"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="109"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="0" id="7" origin="prim-exp" p-complexity="0">
     <location byte="36221" file="src/memtest.c" line="259"/>
     <predicate from="iint" tag="signed-to-unsigned-cast" to="iulong">
      <exp etag="const" xstr="0">
       <constant ctag="cint64" ikind="iint" intValue="0"/>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="109"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="8" origin="prim-exp" p-complexity="0">
     <location byte="36221" file="src/memtest.c" line="259"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="1054" vname="j"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="111"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="9" origin="prim-exp" p-complexity="0">
     <location byte="36221" file="src/memtest.c" line="259"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="1053" vname="words"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="if-expr"/>
       <node name="stmt" num="111"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="10" origin="prim-exp" p-complexity="1">
     <location byte="36291" file="src/memtest.c" line="262"/>
     <predicate tag="cast">
      <tfrom ikind="iulong" ttag="tint">
       <attributes>
        <attr attrname="volatile"/>
       </attributes>
      </tfrom>
      <tto ikind="iulong" ttag="tint"/>
      <exp etag="lval" xstr="*(((lval (p) +i lval (j)):(unsigned long*))">
       <lval>
        <lhost>
         <mem binop="indexpi" etag="binop" xstr="((p +i j):(unsigned long*)">
          <exp1 etag="lval" xstr="p">
           <lval>
            <lhost>
             <var vid="1052" vname="p"/>
            </lhost>
           </lval>
          </exp1>
          <exp2 etag="lval" xstr="j">
           <lval>
            <lhost>
             <var vid="1054" vname="j"/>
            </lhost>
           </lval>
          </exp2>
          <typ ttag="tptr">
           <typ ikind="iulong" ttag="tint">
            <attributes>
             <attr attrname="volatile"/>
            </attributes>
           </typ>
          </typ>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="11" origin="prim-exp" p-complexity="8">
     <location byte="36291" file="src/memtest.c" line="262"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem binop="indexpi" etag="binop" xstr="((p +i j):(unsigned long*)">
         <exp1 etag="lval" xstr="p">
          <lval>
           <lhost>
            <var vid="1052" vname="p"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 etag="lval" xstr="j">
          <lval>
           <lhost>
            <var vid="1054" vname="j"/>
           </lhost>
          </lval>
         </exp2>
         <typ ttag="tptr">
          <typ ikind="iulong" ttag="tint">
           <attributes>
            <attr attrname="volatile"/>
           </attributes>
          </typ>
         </typ>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="12" origin="prim-exp" p-complexity="0">
     <location byte="36291" file="src/memtest.c" line="262"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="1052" vname="p"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="13" origin="prim-exp" p-complexity="0">
     <location byte="36291" file="src/memtest.c" line="262"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="1054" vname="j"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="14" origin="prim-op" p-complexity="1">
     <location byte="36291" file="src/memtest.c" line="262"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="1052" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="15" origin="prim-op" p-complexity="1">
     <location byte="36291" file="src/memtest.c" line="262"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="1052" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="16" origin="prim-op" p-complexity="3">
     <location byte="36291" file="src/memtest.c" line="262"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ikind="iulong" ttag="tint">
       <attributes>
        <attr attrname="volatile"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="1052" vname="p"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="j">
       <lval>
        <lhost>
         <var vid="1054" vname="j"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="17" origin="prim-op" p-complexity="2">
     <location byte="36291" file="src/memtest.c" line="262"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ikind="iulong" ttag="tint">
       <attributes>
        <attr attrname="volatile"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="1052" vname="p"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="j">
       <lval>
        <lhost>
         <var vid="1054" vname="j"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="18" origin="prim-lval" p-complexity="3">
     <location byte="36291" file="src/memtest.c" line="262"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="((p +i j):(unsigned long*)">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="1052" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="j">
        <lval>
         <lhost>
          <var vid="1054" vname="j"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iulong" ttag="tint">
         <attributes>
          <attr attrname="volatile"/>
         </attributes>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="19" origin="prim-lval" p-complexity="3">
     <location byte="36291" file="src/memtest.c" line="262"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="((p +i j):(unsigned long*)">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="1052" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="j">
        <lval>
         <lhost>
          <var vid="1054" vname="j"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iulong" ttag="tint">
         <attributes>
          <attr attrname="volatile"/>
         </attributes>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="20" origin="prim-lval" p-complexity="3">
     <location byte="36291" file="src/memtest.c" line="262"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="((p +i j):(unsigned long*)">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="1052" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="j">
        <lval>
         <lhost>
          <var vid="1054" vname="j"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iulong" ttag="tint">
         <attributes>
          <attr attrname="volatile"/>
         </attributes>
        </typ>
       </typ>
      </exp>
      <typ ikind="iulong" ttag="tint">
       <attributes>
        <attr attrname="volatile"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="21" origin="prim-lval" p-complexity="3">
     <location byte="36291" file="src/memtest.c" line="262"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="((p +i j):(unsigned long*)">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="1052" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="j">
        <lval>
         <lhost>
          <var vid="1054" vname="j"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iulong" ttag="tint">
         <attributes>
          <attr attrname="volatile"/>
         </attributes>
        </typ>
       </typ>
      </exp>
      <typ ikind="iulong" ttag="tint">
       <attributes>
        <attr attrname="volatile"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="0"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="22" origin="prim-exp" p-complexity="1">
     <location byte="36309" file="src/memtest.c" line="263"/>
     <predicate tag="cast">
      <tfrom ikind="iulong" ttag="tint">
       <attributes>
        <attr attrname="volatile"/>
       </attributes>
      </tfrom>
      <tto ikind="iulong" ttag="tint"/>
      <exp etag="lval" xstr="*(((lval (p) +i ((lval (j) + 1):size_t):(unsigned long*))">
       <lval>
        <lhost>
         <mem binop="indexpi" etag="binop" xstr="((p +i ((j + 1):size_t):(unsigned long*)">
          <exp1 etag="lval" xstr="p">
           <lval>
            <lhost>
             <var vid="1052" vname="p"/>
            </lhost>
           </lval>
          </exp1>
          <exp2 binop="plusa" etag="binop" xstr="((j + 1):size_t">
           <exp1 etag="lval" xstr="j">
            <lval>
             <lhost>
              <var vid="1054" vname="j"/>
             </lhost>
            </lval>
           </exp1>
           <exp2 etag="const" xstr="1">
            <constant ctag="cint64" ikind="iulong" intValue="1"/>
           </exp2>
           <typ tname="size_t" ttag="tnamed"/>
          </exp2>
          <typ ttag="tptr">
           <typ ikind="iulong" ttag="tint">
            <attributes>
             <attr attrname="volatile"/>
            </attributes>
           </typ>
          </typ>
         </mem>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="23" origin="prim-exp" p-complexity="9">
     <location byte="36309" file="src/memtest.c" line="263"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <mem binop="indexpi" etag="binop" xstr="((p +i ((j + 1):size_t):(unsigned long*)">
         <exp1 etag="lval" xstr="p">
          <lval>
           <lhost>
            <var vid="1052" vname="p"/>
           </lhost>
          </lval>
         </exp1>
         <exp2 binop="plusa" etag="binop" xstr="((j + 1):size_t">
          <exp1 etag="lval" xstr="j">
           <lval>
            <lhost>
             <var vid="1054" vname="j"/>
            </lhost>
           </lval>
          </exp1>
          <exp2 etag="const" xstr="1">
           <constant ctag="cint64" ikind="iulong" intValue="1"/>
          </exp2>
          <typ tname="size_t" ttag="tnamed"/>
         </exp2>
         <typ ttag="tptr">
          <typ ikind="iulong" ttag="tint">
           <attributes>
            <attr attrname="volatile"/>
           </attributes>
          </typ>
         </typ>
        </mem>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="24" origin="prim-exp" p-complexity="0">
     <location byte="36309" file="src/memtest.c" line="263"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="1052" vname="p"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="25" origin="prim-exp" p-complexity="0">
     <location byte="36309" file="src/memtest.c" line="263"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="1054" vname="j"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="26" origin="prim-op" p-complexity="2">
     <location byte="36309" file="src/memtest.c" line="263"/>
     <predicate op="plusa" size="iulong" tag="int-underflow">
      <exp1 etag="lval" xstr="j">
       <lval>
        <lhost>
         <var vid="1054" vname="j"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iulong" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="27" origin="prim-op" p-complexity="2">
     <location byte="36309" file="src/memtest.c" line="263"/>
     <predicate op="plusa" size="iulong" tag="int-overflow">
      <exp1 etag="lval" xstr="j">
       <lval>
        <lhost>
         <var vid="1054" vname="j"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iulong" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="28" origin="prim-op" p-complexity="1">
     <location byte="36309" file="src/memtest.c" line="263"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="1052" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="29" origin="prim-op" p-complexity="1">
     <location byte="36309" file="src/memtest.c" line="263"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="1052" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="30" origin="prim-op" p-complexity="4">
     <location byte="36309" file="src/memtest.c" line="263"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ikind="iulong" ttag="tint">
       <attributes>
        <attr attrname="volatile"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="1052" vname="p"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 binop="plusa" etag="binop" xstr="((j + 1):size_t">
       <exp1 etag="lval" xstr="j">
        <lval>
         <lhost>
          <var vid="1054" vname="j"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iulong" intValue="1"/>
       </exp2>
       <typ tname="size_t" ttag="tnamed"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="31" origin="prim-op" p-complexity="3">
     <location byte="36309" file="src/memtest.c" line="263"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ikind="iulong" ttag="tint">
       <attributes>
        <attr attrname="volatile"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="1052" vname="p"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 binop="plusa" etag="binop" xstr="((j + 1):size_t">
       <exp1 etag="lval" xstr="j">
        <lval>
         <lhost>
          <var vid="1054" vname="j"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iulong" intValue="1"/>
       </exp2>
       <typ tname="size_t" ttag="tnamed"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="32" origin="prim-lval" p-complexity="4">
     <location byte="36309" file="src/memtest.c" line="263"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="((p +i ((j + 1):size_t):(unsigned long*)">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="1052" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 binop="plusa" etag="binop" xstr="((j + 1):size_t">
        <exp1 etag="lval" xstr="j">
         <lval>
          <lhost>
           <var vid="1054" vname="j"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iulong" intValue="1"/>
        </exp2>
        <typ tname="size_t" ttag="tnamed"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iulong" ttag="tint">
         <attributes>
          <attr attrname="volatile"/>
         </attributes>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="33" origin="prim-lval" p-complexity="4">
     <location byte="36309" file="src/memtest.c" line="263"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="((p +i ((j + 1):size_t):(unsigned long*)">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="1052" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 binop="plusa" etag="binop" xstr="((j + 1):size_t">
        <exp1 etag="lval" xstr="j">
         <lval>
          <lhost>
           <var vid="1054" vname="j"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iulong" intValue="1"/>
        </exp2>
        <typ tname="size_t" ttag="tnamed"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iulong" ttag="tint">
         <attributes>
          <attr attrname="volatile"/>
         </attributes>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="34" origin="prim-lval" p-complexity="4">
     <location byte="36309" file="src/memtest.c" line="263"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="((p +i ((j + 1):size_t):(unsigned long*)">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="1052" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 binop="plusa" etag="binop" xstr="((j + 1):size_t">
        <exp1 etag="lval" xstr="j">
         <lval>
          <lhost>
           <var vid="1054" vname="j"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iulong" intValue="1"/>
        </exp2>
        <typ tname="size_t" ttag="tnamed"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iulong" ttag="tint">
         <attributes>
          <attr attrname="volatile"/>
         </attributes>
        </typ>
       </typ>
      </exp>
      <typ ikind="iulong" ttag="tint">
       <attributes>
        <attr attrname="volatile"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="35" origin="prim-lval" p-complexity="4">
     <location byte="36309" file="src/memtest.c" line="263"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="((p +i ((j + 1):size_t):(unsigned long*)">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="1052" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 binop="plusa" etag="binop" xstr="((j + 1):size_t">
        <exp1 etag="lval" xstr="j">
         <lval>
          <lhost>
           <var vid="1054" vname="j"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iulong" intValue="1"/>
        </exp2>
        <typ tname="size_t" ttag="tnamed"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iulong" ttag="tint">
         <attributes>
          <attr attrname="volatile"/>
         </attributes>
        </typ>
       </typ>
      </exp>
      <typ ikind="iulong" ttag="tint">
       <attributes>
        <attr attrname="volatile"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="1"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lval"/>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="36" origin="prim-exp" p-complexity="0">
     <location byte="36329" file="src/memtest.c" line="264"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="1052" vname="p"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="37" origin="prim-exp" p-complexity="0">
     <location byte="36329" file="src/memtest.c" line="264"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="1054" vname="j"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="38" origin="prim-op" p-complexity="1">
     <location byte="36329" file="src/memtest.c" line="264"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="1052" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="39" origin="prim-op" p-complexity="1">
     <location byte="36329" file="src/memtest.c" line="264"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="1052" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="40" origin="prim-op" p-complexity="3">
     <location byte="36329" file="src/memtest.c" line="264"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ikind="iulong" ttag="tint">
       <attributes>
        <attr attrname="volatile"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="1052" vname="p"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="j">
       <lval>
        <lhost>
         <var vid="1054" vname="j"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="41" origin="prim-op" p-complexity="2">
     <location byte="36329" file="src/memtest.c" line="264"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ikind="iulong" ttag="tint">
       <attributes>
        <attr attrname="volatile"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="1052" vname="p"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="lval" xstr="j">
       <lval>
        <lhost>
         <var vid="1054" vname="j"/>
        </lhost>
       </lval>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="42" origin="prim-lval" p-complexity="3">
     <location byte="36329" file="src/memtest.c" line="264"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="((p +i j):(unsigned long*)">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="1052" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="j">
        <lval>
         <lhost>
          <var vid="1054" vname="j"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iulong" ttag="tint">
         <attributes>
          <attr attrname="volatile"/>
         </attributes>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="43" origin="prim-lval" p-complexity="3">
     <location byte="36329" file="src/memtest.c" line="264"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="((p +i j):(unsigned long*)">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="1052" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="j">
        <lval>
         <lhost>
          <var vid="1054" vname="j"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iulong" ttag="tint">
         <attributes>
          <attr attrname="volatile"/>
         </attributes>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="44" origin="prim-lval" p-complexity="3">
     <location byte="36329" file="src/memtest.c" line="264"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="((p +i j):(unsigned long*)">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="1052" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="j">
        <lval>
         <lhost>
          <var vid="1054" vname="j"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iulong" ttag="tint">
         <attributes>
          <attr attrname="volatile"/>
         </attributes>
        </typ>
       </typ>
      </exp>
      <typ ikind="iulong" ttag="tint">
       <attributes>
        <attr attrname="volatile"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="45" origin="prim-lval" p-complexity="3">
     <location byte="36329" file="src/memtest.c" line="264"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="((p +i j):(unsigned long*)">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="1052" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="lval" xstr="j">
        <lval>
         <lhost>
          <var vid="1054" vname="j"/>
         </lhost>
        </lval>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iulong" ttag="tint">
         <attributes>
          <attr attrname="volatile"/>
         </attributes>
        </typ>
       </typ>
      </exp>
      <typ ikind="iulong" ttag="tint">
       <attributes>
        <attr attrname="volatile"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="46" origin="prim-exp" p-complexity="1">
     <location byte="36329" file="src/memtest.c" line="264"/>
     <predicate tag="cast">
      <tfrom ikind="iulong" ttag="tint"/>
      <tto ikind="iulong" ttag="tint">
       <attributes>
        <attr attrname="volatile"/>
       </attributes>
      </tto>
      <exp etag="lval" xstr="b">
       <lval>
        <lhost>
         <var vid="1056" vname="b"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="47" origin="prim-exp" p-complexity="0">
     <location byte="36329" file="src/memtest.c" line="264"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="1056" vname="b"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="2"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="48" origin="prim-exp" p-complexity="0">
     <location byte="36347" file="src/memtest.c" line="265"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="1052" vname="p"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="49" origin="prim-exp" p-complexity="0">
     <location byte="36347" file="src/memtest.c" line="265"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="1054" vname="j"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="50" origin="prim-op" p-complexity="2">
     <location byte="36347" file="src/memtest.c" line="265"/>
     <predicate op="plusa" size="iulong" tag="int-underflow">
      <exp1 etag="lval" xstr="j">
       <lval>
        <lhost>
         <var vid="1054" vname="j"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iulong" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="51" origin="prim-op" p-complexity="2">
     <location byte="36347" file="src/memtest.c" line="265"/>
     <predicate op="plusa" size="iulong" tag="int-overflow">
      <exp1 etag="lval" xstr="j">
       <lval>
        <lhost>
         <var vid="1054" vname="j"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="1">
       <constant ctag="cint64" ikind="iulong" intValue="1"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="2"/>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="52" origin="prim-op" p-complexity="1">
     <location byte="36347" file="src/memtest.c" line="265"/>
     <predicate tag="not-null">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="1052" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="53" origin="prim-op" p-complexity="1">
     <location byte="36347" file="src/memtest.c" line="265"/>
     <predicate tag="valid-mem">
      <exp etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="1052" vname="p"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="54" origin="prim-op" p-complexity="4">
     <location byte="36347" file="src/memtest.c" line="265"/>
     <predicate op="indexpi" tag="ptr-lower-bound">
      <typ ikind="iulong" ttag="tint">
       <attributes>
        <attr attrname="volatile"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="1052" vname="p"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 binop="plusa" etag="binop" xstr="((j + 1):size_t">
       <exp1 etag="lval" xstr="j">
        <lval>
         <lhost>
          <var vid="1054" vname="j"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iulong" intValue="1"/>
       </exp2>
       <typ tname="size_t" ttag="tnamed"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="55" origin="prim-op" p-complexity="3">
     <location byte="36347" file="src/memtest.c" line="265"/>
     <predicate op="indexpi" tag="ptr-upper-bound-deref">
      <typ ikind="iulong" ttag="tint">
       <attributes>
        <attr attrname="volatile"/>
       </attributes>
      </typ>
      <exp1 etag="lval" xstr="p">
       <lval>
        <lhost>
         <var vid="1052" vname="p"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 binop="plusa" etag="binop" xstr="((j + 1):size_t">
       <exp1 etag="lval" xstr="j">
        <lval>
         <lhost>
          <var vid="1054" vname="j"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 etag="const" xstr="1">
        <constant ctag="cint64" ikind="iulong" intValue="1"/>
       </exp2>
       <typ tname="size_t" ttag="tnamed"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="56" origin="prim-lval" p-complexity="4">
     <location byte="36347" file="src/memtest.c" line="265"/>
     <predicate tag="not-null">
      <exp binop="indexpi" etag="binop" xstr="((p +i ((j + 1):size_t):(unsigned long*)">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="1052" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 binop="plusa" etag="binop" xstr="((j + 1):size_t">
        <exp1 etag="lval" xstr="j">
         <lval>
          <lhost>
           <var vid="1054" vname="j"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iulong" intValue="1"/>
        </exp2>
        <typ tname="size_t" ttag="tnamed"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iulong" ttag="tint">
         <attributes>
          <attr attrname="volatile"/>
         </attributes>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="57" origin="prim-lval" p-complexity="4">
     <location byte="36347" file="src/memtest.c" line="265"/>
     <predicate tag="valid-mem">
      <exp binop="indexpi" etag="binop" xstr="((p +i ((j + 1):size_t):(unsigned long*)">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="1052" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 binop="plusa" etag="binop" xstr="((j + 1):size_t">
        <exp1 etag="lval" xstr="j">
         <lval>
          <lhost>
           <var vid="1054" vname="j"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iulong" intValue="1"/>
        </exp2>
        <typ tname="size_t" ttag="tnamed"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iulong" ttag="tint">
         <attributes>
          <attr attrname="volatile"/>
         </attributes>
        </typ>
       </typ>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="58" origin="prim-lval" p-complexity="4">
     <location byte="36347" file="src/memtest.c" line="265"/>
     <predicate tag="lower-bound">
      <exp binop="indexpi" etag="binop" xstr="((p +i ((j + 1):size_t):(unsigned long*)">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="1052" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 binop="plusa" etag="binop" xstr="((j + 1):size_t">
        <exp1 etag="lval" xstr="j">
         <lval>
          <lhost>
           <var vid="1054" vname="j"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iulong" intValue="1"/>
        </exp2>
        <typ tname="size_t" ttag="tnamed"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iulong" ttag="tint">
         <attributes>
          <attr attrname="volatile"/>
         </attributes>
        </typ>
       </typ>
      </exp>
      <typ ikind="iulong" ttag="tint">
       <attributes>
        <attr attrname="volatile"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="59" origin="prim-lval" p-complexity="4">
     <location byte="36347" file="src/memtest.c" line="265"/>
     <predicate tag="upper-bound">
      <exp binop="indexpi" etag="binop" xstr="((p +i ((j + 1):size_t):(unsigned long*)">
       <exp1 etag="lval" xstr="p">
        <lval>
         <lhost>
          <var vid="1052" vname="p"/>
         </lhost>
        </lval>
       </exp1>
       <exp2 binop="plusa" etag="binop" xstr="((j + 1):size_t">
        <exp1 etag="lval" xstr="j">
         <lval>
          <lhost>
           <var vid="1054" vname="j"/>
          </lhost>
         </lval>
        </exp1>
        <exp2 etag="const" xstr="1">
         <constant ctag="cint64" ikind="iulong" intValue="1"/>
        </exp2>
        <typ tname="size_t" ttag="tnamed"/>
       </exp2>
       <typ ttag="tptr">
        <typ ikind="iulong" ttag="tint">
         <attributes>
          <attr attrname="volatile"/>
         </attributes>
        </typ>
       </typ>
      </exp>
      <typ ikind="iulong" ttag="tint">
       <attributes>
        <attr attrname="volatile"/>
       </attributes>
      </typ>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="mem"/>
       <node name="lhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="60" origin="prim-exp" p-complexity="1">
     <location byte="36347" file="src/memtest.c" line="265"/>
     <predicate tag="cast">
      <tfrom ikind="iulong" ttag="tint"/>
      <tto ikind="iulong" ttag="tint">
       <attributes>
        <attr attrname="volatile"/>
       </attributes>
      </tto>
      <exp etag="lval" xstr="a">
       <lval>
        <lhost>
         <var vid="1055" vname="a"/>
        </lhost>
       </lval>
      </exp>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="61" origin="prim-exp" p-complexity="0">
     <location byte="36347" file="src/memtest.c" line="265"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="1055" vname="a"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="3"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="cast"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="62" origin="prim-exp" p-complexity="0">
     <location byte="36221" file="src/memtest.c" line="259"/>
     <predicate tag="initialized">
      <lval>
       <lhost>
        <var vid="1054" vname="j"/>
       </lhost>
      </lval>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="2op" num="1"/>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="63" origin="prim-op" p-complexity="2">
     <location byte="36221" file="src/memtest.c" line="259"/>
     <predicate op="plusa" size="iulong" tag="int-underflow">
      <exp1 etag="lval" xstr="j">
       <lval>
        <lhost>
         <var vid="1054" vname="j"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="2">
       <constant ctag="cint64" ikind="iulong" intValue="2"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
    <proof-obligation c-complexity="5" id="64" origin="prim-op" p-complexity="2">
     <location byte="36221" file="src/memtest.c" line="259"/>
     <predicate op="plusa" size="iulong" tag="int-overflow">
      <exp1 etag="lval" xstr="j">
       <lval>
        <lhost>
         <var vid="1054" vname="j"/>
        </lhost>
       </lval>
      </exp1>
      <exp2 etag="const" xstr="2">
       <constant ctag="cint64" ikind="iulong" intValue="2"/>
      </exp2>
     </predicate>
     <context>
      <cfg-context>
       <node name="instr" num="4"/>
       <node name="stmt" num="113"/>
       <node name="loop"/>
       <node name="stmt" num="110"/>
      </cfg-context>
      <exp-context>
       <node name="rhs"/>
      </exp-context>
     </context>
    </proof-obligation>
   </primary-proof-obligations>
  </function>
  <header time="05/24/2016 04:22:02">
   <application file="src/memtest.xml" name="application"/>
  </header>
 </c-analysis>
